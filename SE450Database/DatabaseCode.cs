#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SE450Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class SleepMonitor : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAwk_NighttimeAwakenings(Awk_NighttimeAwakenings instance);
    partial void UpdateAwk_NighttimeAwakenings(Awk_NighttimeAwakenings instance);
    partial void DeleteAwk_NighttimeAwakenings(Awk_NighttimeAwakenings instance);
    partial void InsertBhv_Behavior(Bhv_Behavior instance);
    partial void UpdateBhv_Behavior(Bhv_Behavior instance);
    partial void DeleteBhv_Behavior(Bhv_Behavior instance);
    partial void InsertCfn_CaffeineConsumption(Cfn_CaffeineConsumption instance);
    partial void UpdateCfn_CaffeineConsumption(Cfn_CaffeineConsumption instance);
    partial void DeleteCfn_CaffeineConsumption(Cfn_CaffeineConsumption instance);
    partial void InsertCft_CaffeineType(Cft_CaffeineType instance);
    partial void UpdateCft_CaffeineType(Cft_CaffeineType instance);
    partial void DeleteCft_CaffeineType(Cft_CaffeineType instance);
    partial void InsertChn_ChainAnalysis(Chn_ChainAnalysis instance);
    partial void UpdateChn_ChainAnalysis(Chn_ChainAnalysis instance);
    partial void DeleteChn_ChainAnalysis(Chn_ChainAnalysis instance);
    partial void InsertCtr_ConcentrationLog(Ctr_ConcentrationLog instance);
    partial void UpdateCtr_ConcentrationLog(Ctr_ConcentrationLog instance);
    partial void DeleteCtr_ConcentrationLog(Ctr_ConcentrationLog instance);
    partial void InsertEml_EmotionLog(Eml_EmotionLog instance);
    partial void UpdateEml_EmotionLog(Eml_EmotionLog instance);
    partial void DeleteEml_EmotionLog(Eml_EmotionLog instance);
    partial void InsertEmt_Emotions(Emt_Emotions instance);
    partial void UpdateEmt_Emotions(Emt_Emotions instance);
    partial void DeleteEmt_Emotions(Emt_Emotions instance);
    partial void InsertExi_ExerciseIntensity(Exi_ExerciseIntensity instance);
    partial void UpdateExi_ExerciseIntensity(Exi_ExerciseIntensity instance);
    partial void DeleteExi_ExerciseIntensity(Exi_ExerciseIntensity instance);
    partial void InsertExr_Exercise(Exr_Exercise instance);
    partial void UpdateExr_Exercise(Exr_Exercise instance);
    partial void DeleteExr_Exercise(Exr_Exercise instance);
    partial void InsertExt_ExerciseTypes(Ext_ExerciseTypes instance);
    partial void UpdateExt_ExerciseTypes(Ext_ExerciseTypes instance);
    partial void DeleteExt_ExerciseTypes(Ext_ExerciseTypes instance);
    partial void InsertFtg_FatigueLevels(Ftg_FatigueLevels instance);
    partial void UpdateFtg_FatigueLevels(Ftg_FatigueLevels instance);
    partial void DeleteFtg_FatigueLevels(Ftg_FatigueLevels instance);
    partial void InsertGft_GoalsForTomorrow(Gft_GoalsForTomorrow instance);
    partial void UpdateGft_GoalsForTomorrow(Gft_GoalsForTomorrow instance);
    partial void DeleteGft_GoalsForTomorrow(Gft_GoalsForTomorrow instance);
    partial void InsertGsr_GlobalSuggestions(Gsr_GlobalSuggestions instance);
    partial void UpdateGsr_GlobalSuggestions(Gsr_GlobalSuggestions instance);
    partial void DeleteGsr_GlobalSuggestions(Gsr_GlobalSuggestions instance);
    partial void InsertImc_ImmediateConsequences(Imc_ImmediateConsequences instance);
    partial void UpdateImc_ImmediateConsequences(Imc_ImmediateConsequences instance);
    partial void DeleteImc_ImmediateConsequences(Imc_ImmediateConsequences instance);
    partial void InsertLtc_LongTermConsequences(Ltc_LongTermConsequences instance);
    partial void UpdateLtc_LongTermConsequences(Ltc_LongTermConsequences instance);
    partial void DeleteLtc_LongTermConsequences(Ltc_LongTermConsequences instance);
    partial void InsertLtg_LongTermGoal(Ltg_LongTermGoal instance);
    partial void UpdateLtg_LongTermGoal(Ltg_LongTermGoal instance);
    partial void DeleteLtg_LongTermGoal(Ltg_LongTermGoal instance);
    partial void InsertPrd_Product(Prd_Product instance);
    partial void UpdatePrd_Product(Prd_Product instance);
    partial void DeletePrd_Product(Prd_Product instance);
    partial void InsertPre_PredefinedEmotion(Pre_PredefinedEmotion instance);
    partial void UpdatePre_PredefinedEmotion(Pre_PredefinedEmotion instance);
    partial void DeletePre_PredefinedEmotion(Pre_PredefinedEmotion instance);
    partial void InsertRwd_Rewards(Rwd_Rewards instance);
    partial void UpdateRwd_Rewards(Rwd_Rewards instance);
    partial void DeleteRwd_Rewards(Rwd_Rewards instance);
    partial void InsertSlp_SleepLog(Slp_SleepLog instance);
    partial void UpdateSlp_SleepLog(Slp_SleepLog instance);
    partial void DeleteSlp_SleepLog(Slp_SleepLog instance);
    partial void InsertStg_ShortTermGoals(Stg_ShortTermGoals instance);
    partial void UpdateStg_ShortTermGoals(Stg_ShortTermGoals instance);
    partial void DeleteStg_ShortTermGoals(Stg_ShortTermGoals instance);
    partial void InsertTht_Thought(Tht_Thought instance);
    partial void UpdateTht_Thought(Tht_Thought instance);
    partial void DeleteTht_Thought(Tht_Thought instance);
    partial void InsertUsr_User(Usr_User instance);
    partial void UpdateUsr_User(Usr_User instance);
    partial void DeleteUsr_User(Usr_User instance);
    partial void InsertVul_Vulnerability(Vul_Vulnerability instance);
    partial void UpdateVul_Vulnerability(Vul_Vulnerability instance);
    partial void DeleteVul_Vulnerability(Vul_Vulnerability instance);
    partial void InsertWtp_WaysToPrevent(Wtp_WaysToPrevent instance);
    partial void UpdateWtp_WaysToPrevent(Wtp_WaysToPrevent instance);
    partial void DeleteWtp_WaysToPrevent(Wtp_WaysToPrevent instance);
    #endregion
		
		public SleepMonitor(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SleepMonitor(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SleepMonitor(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SleepMonitor(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Awk_NighttimeAwakenings> Awk_NighttimeAwakenings
		{
			get
			{
				return this.GetTable<Awk_NighttimeAwakenings>();
			}
		}
		
		public System.Data.Linq.Table<Bhv_Behavior> Bhv_Behavior
		{
			get
			{
				return this.GetTable<Bhv_Behavior>();
			}
		}
		
		public System.Data.Linq.Table<Cfn_CaffeineConsumption> Cfn_CaffeineConsumption
		{
			get
			{
				return this.GetTable<Cfn_CaffeineConsumption>();
			}
		}
		
		public System.Data.Linq.Table<Cft_CaffeineType> Cft_CaffeineType
		{
			get
			{
				return this.GetTable<Cft_CaffeineType>();
			}
		}
		
		public System.Data.Linq.Table<Chn_ChainAnalysis> Chn_ChainAnalysis
		{
			get
			{
				return this.GetTable<Chn_ChainAnalysis>();
			}
		}
		
		public System.Data.Linq.Table<Ctr_ConcentrationLog> Ctr_ConcentrationLog
		{
			get
			{
				return this.GetTable<Ctr_ConcentrationLog>();
			}
		}
		
		public System.Data.Linq.Table<Eml_EmotionLog> Eml_EmotionLog
		{
			get
			{
				return this.GetTable<Eml_EmotionLog>();
			}
		}
		
		public System.Data.Linq.Table<Emt_Emotions> Emt_Emotions
		{
			get
			{
				return this.GetTable<Emt_Emotions>();
			}
		}
		
		public System.Data.Linq.Table<Exi_ExerciseIntensity> Exi_ExerciseIntensity
		{
			get
			{
				return this.GetTable<Exi_ExerciseIntensity>();
			}
		}
		
		public System.Data.Linq.Table<Exr_Exercise> Exr_Exercise
		{
			get
			{
				return this.GetTable<Exr_Exercise>();
			}
		}
		
		public System.Data.Linq.Table<Ext_ExerciseTypes> Ext_ExerciseTypes
		{
			get
			{
				return this.GetTable<Ext_ExerciseTypes>();
			}
		}
		
		public System.Data.Linq.Table<Ftg_FatigueLevels> Ftg_FatigueLevels
		{
			get
			{
				return this.GetTable<Ftg_FatigueLevels>();
			}
		}
		
		public System.Data.Linq.Table<Gft_GoalsForTomorrow> Gft_GoalsForTomorrow
		{
			get
			{
				return this.GetTable<Gft_GoalsForTomorrow>();
			}
		}
		
		public System.Data.Linq.Table<Gsr_GlobalSuggestions> Gsr_GlobalSuggestions
		{
			get
			{
				return this.GetTable<Gsr_GlobalSuggestions>();
			}
		}
		
		public System.Data.Linq.Table<Imc_ImmediateConsequences> Imc_ImmediateConsequences
		{
			get
			{
				return this.GetTable<Imc_ImmediateConsequences>();
			}
		}
		
		public System.Data.Linq.Table<Ltc_LongTermConsequences> Ltc_LongTermConsequences
		{
			get
			{
				return this.GetTable<Ltc_LongTermConsequences>();
			}
		}
		
		public System.Data.Linq.Table<Ltg_LongTermGoal> Ltg_LongTermGoal
		{
			get
			{
				return this.GetTable<Ltg_LongTermGoal>();
			}
		}
		
		public System.Data.Linq.Table<Prd_Product> Prd_Product
		{
			get
			{
				return this.GetTable<Prd_Product>();
			}
		}
		
		public System.Data.Linq.Table<Pre_PredefinedEmotion> Pre_PredefinedEmotion
		{
			get
			{
				return this.GetTable<Pre_PredefinedEmotion>();
			}
		}
		
		public System.Data.Linq.Table<Rwd_Rewards> Rwd_Rewards
		{
			get
			{
				return this.GetTable<Rwd_Rewards>();
			}
		}
		
		public System.Data.Linq.Table<Slp_SleepLog> Slp_SleepLog
		{
			get
			{
				return this.GetTable<Slp_SleepLog>();
			}
		}
		
		public System.Data.Linq.Table<Stg_ShortTermGoals> Stg_ShortTermGoals
		{
			get
			{
				return this.GetTable<Stg_ShortTermGoals>();
			}
		}
		
		public System.Data.Linq.Table<Tht_Thought> Tht_Thought
		{
			get
			{
				return this.GetTable<Tht_Thought>();
			}
		}
		
		public System.Data.Linq.Table<Usr_User> Usr_User
		{
			get
			{
				return this.GetTable<Usr_User>();
			}
		}
		
		public System.Data.Linq.Table<Vul_Vulnerability> Vul_Vulnerability
		{
			get
			{
				return this.GetTable<Vul_Vulnerability>();
			}
		}
		
		public System.Data.Linq.Table<Wtp_WaysToPrevent> Wtp_WaysToPrevent
		{
			get
			{
				return this.GetTable<Wtp_WaysToPrevent>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_diagramobjects", IsComposable=true)]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public System.Nullable<int> Fn_diagramobjects()
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_alterdiagram")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_alterdiagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(MAX)")] System.Data.Linq.Binary definition)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, version, definition);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_creatediagram")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_creatediagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(MAX)")] System.Data.Linq.Binary definition)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, version, definition);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_dropdiagram")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_dropdiagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_helpdiagramdefinition")]
		public ISingleResult<Sp_helpdiagramdefinitionResult> Sp_helpdiagramdefinition([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
			return ((ISingleResult<Sp_helpdiagramdefinitionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_helpdiagrams")]
		public ISingleResult<Sp_helpdiagramsResult> Sp_helpdiagrams([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
			return ((ISingleResult<Sp_helpdiagramsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_renamediagram")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_renamediagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string new_diagramname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, new_diagramname);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usr_GetAllUsers")]
		public ISingleResult<Usr_GetAllUsersResult> Usr_GetAllUsers()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Usr_GetAllUsersResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.awk_NighttimeAwakenings")]
	public partial class Awk_NighttimeAwakenings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Awk_ID;
		
		private System.DateTime _Awk_start;
		
		private System.Nullable<System.DateTime> _Awk_end;
		
		private int _Awk_slp_ID;
		
		private EntityRef<Slp_SleepLog> _Slp_SleepLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAwk_IDChanging(int value);
    partial void OnAwk_IDChanged();
    partial void OnAwk_startChanging(System.DateTime value);
    partial void OnAwk_startChanged();
    partial void OnAwk_endChanging(System.Nullable<System.DateTime> value);
    partial void OnAwk_endChanged();
    partial void OnAwk_slp_IDChanging(int value);
    partial void OnAwk_slp_IDChanged();
    #endregion
		
		public Awk_NighttimeAwakenings()
		{
			this._Slp_SleepLog = default(EntityRef<Slp_SleepLog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="awk_ID", Storage="_Awk_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Awk_ID
		{
			get
			{
				return this._Awk_ID;
			}
			set
			{
				if ((this._Awk_ID != value))
				{
					this.OnAwk_IDChanging(value);
					this.SendPropertyChanging();
					this._Awk_ID = value;
					this.SendPropertyChanged("Awk_ID");
					this.OnAwk_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="awk_start", Storage="_Awk_start", DbType="DateTime NOT NULL")]
		public System.DateTime Awk_start
		{
			get
			{
				return this._Awk_start;
			}
			set
			{
				if ((this._Awk_start != value))
				{
					this.OnAwk_startChanging(value);
					this.SendPropertyChanging();
					this._Awk_start = value;
					this.SendPropertyChanged("Awk_start");
					this.OnAwk_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="awk_end", Storage="_Awk_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> Awk_end
		{
			get
			{
				return this._Awk_end;
			}
			set
			{
				if ((this._Awk_end != value))
				{
					this.OnAwk_endChanging(value);
					this.SendPropertyChanging();
					this._Awk_end = value;
					this.SendPropertyChanged("Awk_end");
					this.OnAwk_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="awk_slp_ID", Storage="_Awk_slp_ID", DbType="Int NOT NULL")]
		public int Awk_slp_ID
		{
			get
			{
				return this._Awk_slp_ID;
			}
			set
			{
				if ((this._Awk_slp_ID != value))
				{
					this.OnAwk_slp_IDChanging(value);
					this.SendPropertyChanging();
					this._Awk_slp_ID = value;
					this.SendPropertyChanged("Awk_slp_ID");
					this.OnAwk_slp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_awk_NighttimeAwakenings_slp_SleepLog", Storage="_Slp_SleepLog", ThisKey="Awk_ID", OtherKey="Slp_ID", IsForeignKey=true)]
		public Slp_SleepLog Slp_SleepLog
		{
			get
			{
				return this._Slp_SleepLog.Entity;
			}
			set
			{
				Slp_SleepLog previousValue = this._Slp_SleepLog.Entity;
				if (((previousValue != value) 
							|| (this._Slp_SleepLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Slp_SleepLog.Entity = null;
						previousValue.Awk_NighttimeAwakenings = null;
					}
					this._Slp_SleepLog.Entity = value;
					if ((value != null))
					{
						value.Awk_NighttimeAwakenings = this;
						this._Awk_ID = value.Slp_ID;
					}
					else
					{
						this._Awk_ID = default(int);
					}
					this.SendPropertyChanged("Slp_SleepLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bhv_Behavior")]
	public partial class Bhv_Behavior : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Bhv_order;
		
		private int _Bhv_chn_id;
		
		private string _Bhv_BehaviorDesc;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBhv_orderChanging(int value);
    partial void OnBhv_orderChanged();
    partial void OnBhv_chn_idChanging(int value);
    partial void OnBhv_chn_idChanged();
    partial void OnBhv_BehaviorDescChanging(string value);
    partial void OnBhv_BehaviorDescChanged();
    #endregion
		
		public Bhv_Behavior()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bhv_order", Storage="_Bhv_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Bhv_order
		{
			get
			{
				return this._Bhv_order;
			}
			set
			{
				if ((this._Bhv_order != value))
				{
					this.OnBhv_orderChanging(value);
					this.SendPropertyChanging();
					this._Bhv_order = value;
					this.SendPropertyChanged("Bhv_order");
					this.OnBhv_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bhv_chn_id", Storage="_Bhv_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Bhv_chn_id
		{
			get
			{
				return this._Bhv_chn_id;
			}
			set
			{
				if ((this._Bhv_chn_id != value))
				{
					this.OnBhv_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Bhv_chn_id = value;
					this.SendPropertyChanged("Bhv_chn_id");
					this.OnBhv_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bhv_BehaviorDesc", Storage="_Bhv_BehaviorDesc", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Bhv_BehaviorDesc
		{
			get
			{
				return this._Bhv_BehaviorDesc;
			}
			set
			{
				if ((this._Bhv_BehaviorDesc != value))
				{
					this.OnBhv_BehaviorDescChanging(value);
					this.SendPropertyChanging();
					this._Bhv_BehaviorDesc = value;
					this.SendPropertyChanged("Bhv_BehaviorDesc");
					this.OnBhv_BehaviorDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bhv_Behavior_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Bhv_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Bhv_Behavior.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Bhv_Behavior.Add(this);
						this._Bhv_chn_id = value.Chn_ID;
					}
					else
					{
						this._Bhv_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cfn_CaffeineConsumption")]
	public partial class Cfn_CaffeineConsumption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cfn_ID;
		
		private System.DateTime _Cfn_DateTime;
		
		private int _Cfn_cft_ID;
		
		private int _Cfn_usr_ID;
		
		private int _Cfn_number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCfn_IDChanging(int value);
    partial void OnCfn_IDChanged();
    partial void OnCfn_DateTimeChanging(System.DateTime value);
    partial void OnCfn_DateTimeChanged();
    partial void OnCfn_cft_IDChanging(int value);
    partial void OnCfn_cft_IDChanged();
    partial void OnCfn_usr_IDChanging(int value);
    partial void OnCfn_usr_IDChanged();
    partial void OnCfn_numberChanging(int value);
    partial void OnCfn_numberChanged();
    #endregion
		
		public Cfn_CaffeineConsumption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cfn_ID", Storage="_Cfn_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cfn_ID
		{
			get
			{
				return this._Cfn_ID;
			}
			set
			{
				if ((this._Cfn_ID != value))
				{
					this.OnCfn_IDChanging(value);
					this.SendPropertyChanging();
					this._Cfn_ID = value;
					this.SendPropertyChanged("Cfn_ID");
					this.OnCfn_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cfn_DateTime", Storage="_Cfn_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime Cfn_DateTime
		{
			get
			{
				return this._Cfn_DateTime;
			}
			set
			{
				if ((this._Cfn_DateTime != value))
				{
					this.OnCfn_DateTimeChanging(value);
					this.SendPropertyChanging();
					this._Cfn_DateTime = value;
					this.SendPropertyChanged("Cfn_DateTime");
					this.OnCfn_DateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cfn_cft_ID", Storage="_Cfn_cft_ID", DbType="Int NOT NULL")]
		public int Cfn_cft_ID
		{
			get
			{
				return this._Cfn_cft_ID;
			}
			set
			{
				if ((this._Cfn_cft_ID != value))
				{
					this.OnCfn_cft_IDChanging(value);
					this.SendPropertyChanging();
					this._Cfn_cft_ID = value;
					this.SendPropertyChanged("Cfn_cft_ID");
					this.OnCfn_cft_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cfn_usr_ID", Storage="_Cfn_usr_ID", DbType="Int NOT NULL")]
		public int Cfn_usr_ID
		{
			get
			{
				return this._Cfn_usr_ID;
			}
			set
			{
				if ((this._Cfn_usr_ID != value))
				{
					this.OnCfn_usr_IDChanging(value);
					this.SendPropertyChanging();
					this._Cfn_usr_ID = value;
					this.SendPropertyChanged("Cfn_usr_ID");
					this.OnCfn_usr_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cfn_number", Storage="_Cfn_number", DbType="Int NOT NULL")]
		public int Cfn_number
		{
			get
			{
				return this._Cfn_number;
			}
			set
			{
				if ((this._Cfn_number != value))
				{
					this.OnCfn_numberChanging(value);
					this.SendPropertyChanging();
					this._Cfn_number = value;
					this.SendPropertyChanged("Cfn_number");
					this.OnCfn_numberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cft_CaffeineType")]
	public partial class Cft_CaffeineType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cft_id;
		
		private double _Cft_amount;
		
		private double _Cft_size;
		
		private int _Prd_Product;
		
		private EntityRef<Prd_Product> _Cft_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCft_idChanging(int value);
    partial void OnCft_idChanged();
    partial void OnCft_amountChanging(double value);
    partial void OnCft_amountChanged();
    partial void OnCft_sizeChanging(double value);
    partial void OnCft_sizeChanged();
    partial void OnPrd_ProductChanging(int value);
    partial void OnPrd_ProductChanged();
    #endregion
		
		public Cft_CaffeineType()
		{
			this._Cft_ = default(EntityRef<Prd_Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cft_id", Storage="_Cft_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cft_id
		{
			get
			{
				return this._Cft_id;
			}
			set
			{
				if ((this._Cft_id != value))
				{
					this.OnCft_idChanging(value);
					this.SendPropertyChanging();
					this._Cft_id = value;
					this.SendPropertyChanged("Cft_id");
					this.OnCft_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cft_amount", Storage="_Cft_amount", DbType="Float NOT NULL")]
		public double Cft_amount
		{
			get
			{
				return this._Cft_amount;
			}
			set
			{
				if ((this._Cft_amount != value))
				{
					this.OnCft_amountChanging(value);
					this.SendPropertyChanging();
					this._Cft_amount = value;
					this.SendPropertyChanged("Cft_amount");
					this.OnCft_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cft_size", Storage="_Cft_size", DbType="Float NOT NULL")]
		public double Cft_size
		{
			get
			{
				return this._Cft_size;
			}
			set
			{
				if ((this._Cft_size != value))
				{
					this.OnCft_sizeChanging(value);
					this.SendPropertyChanging();
					this._Cft_size = value;
					this.SendPropertyChanged("Cft_size");
					this.OnCft_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="prd_Product", Storage="_Prd_Product", DbType="Int NOT NULL")]
		public int Prd_Product
		{
			get
			{
				return this._Prd_Product;
			}
			set
			{
				if ((this._Prd_Product != value))
				{
					this.OnPrd_ProductChanging(value);
					this.SendPropertyChanging();
					this._Prd_Product = value;
					this.SendPropertyChanged("Prd_Product");
					this.OnPrd_ProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cft_CaffeineType_prd_Product", Storage="_Cft_", ThisKey="Cft_id", OtherKey="Prd_ID", IsForeignKey=true)]
		public Prd_Product Cft_
		{
			get
			{
				return this._Cft_.Entity;
			}
			set
			{
				Prd_Product previousValue = this._Cft_.Entity;
				if (((previousValue != value) 
							|| (this._Cft_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cft_.Entity = null;
						previousValue.Cft_CaffeineType = null;
					}
					this._Cft_.Entity = value;
					if ((value != null))
					{
						value.Cft_CaffeineType = this;
						this._Cft_id = value.Prd_ID;
					}
					else
					{
						this._Cft_id = default(int);
					}
					this.SendPropertyChanged("Cft_");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chn_ChainAnalysis")]
	public partial class Chn_ChainAnalysis : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Chn_ID;
		
		private int _Chn_usr_ID;
		
		private string _Chn_ProblemBehavior;
		
		private System.DateTime _Chn_DateAndTime;
		
		private string _Chn_Location;
		
		private EntitySet<Bhv_Behavior> _Bhv_Behavior;
		
		private EntityRef<Usr_User> _Usr_User;
		
		private EntitySet<Emt_Emotions> _Emt_Emotions;
		
		private EntitySet<Gft_GoalsForTomorrow> _Gft_GoalsForTomorrow;
		
		private EntitySet<Imc_ImmediateConsequences> _Imc_ImmediateConsequences;
		
		private EntitySet<Ltc_LongTermConsequences> _Ltc_LongTermConsequences;
		
		private EntitySet<Ltg_LongTermGoal> _Ltg_LongTermGoal;
		
		private EntitySet<Stg_ShortTermGoals> _Stg_ShortTermGoals;
		
		private EntitySet<Tht_Thought> _Tht_Thought;
		
		private EntitySet<Vul_Vulnerability> _Vul_Vulnerability;
		
		private EntitySet<Wtp_WaysToPrevent> _Wtp_WaysToPrevent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChn_IDChanging(int value);
    partial void OnChn_IDChanged();
    partial void OnChn_usr_IDChanging(int value);
    partial void OnChn_usr_IDChanged();
    partial void OnChn_ProblemBehaviorChanging(string value);
    partial void OnChn_ProblemBehaviorChanged();
    partial void OnChn_DateAndTimeChanging(System.DateTime value);
    partial void OnChn_DateAndTimeChanged();
    partial void OnChn_LocationChanging(string value);
    partial void OnChn_LocationChanged();
    #endregion
		
		public Chn_ChainAnalysis()
		{
			this._Bhv_Behavior = new EntitySet<Bhv_Behavior>(new Action<Bhv_Behavior>(this.attach_Bhv_Behavior), new Action<Bhv_Behavior>(this.detach_Bhv_Behavior));
			this._Usr_User = default(EntityRef<Usr_User>);
			this._Emt_Emotions = new EntitySet<Emt_Emotions>(new Action<Emt_Emotions>(this.attach_Emt_Emotions), new Action<Emt_Emotions>(this.detach_Emt_Emotions));
			this._Gft_GoalsForTomorrow = new EntitySet<Gft_GoalsForTomorrow>(new Action<Gft_GoalsForTomorrow>(this.attach_Gft_GoalsForTomorrow), new Action<Gft_GoalsForTomorrow>(this.detach_Gft_GoalsForTomorrow));
			this._Imc_ImmediateConsequences = new EntitySet<Imc_ImmediateConsequences>(new Action<Imc_ImmediateConsequences>(this.attach_Imc_ImmediateConsequences), new Action<Imc_ImmediateConsequences>(this.detach_Imc_ImmediateConsequences));
			this._Ltc_LongTermConsequences = new EntitySet<Ltc_LongTermConsequences>(new Action<Ltc_LongTermConsequences>(this.attach_Ltc_LongTermConsequences), new Action<Ltc_LongTermConsequences>(this.detach_Ltc_LongTermConsequences));
			this._Ltg_LongTermGoal = new EntitySet<Ltg_LongTermGoal>(new Action<Ltg_LongTermGoal>(this.attach_Ltg_LongTermGoal), new Action<Ltg_LongTermGoal>(this.detach_Ltg_LongTermGoal));
			this._Stg_ShortTermGoals = new EntitySet<Stg_ShortTermGoals>(new Action<Stg_ShortTermGoals>(this.attach_Stg_ShortTermGoals), new Action<Stg_ShortTermGoals>(this.detach_Stg_ShortTermGoals));
			this._Tht_Thought = new EntitySet<Tht_Thought>(new Action<Tht_Thought>(this.attach_Tht_Thought), new Action<Tht_Thought>(this.detach_Tht_Thought));
			this._Vul_Vulnerability = new EntitySet<Vul_Vulnerability>(new Action<Vul_Vulnerability>(this.attach_Vul_Vulnerability), new Action<Vul_Vulnerability>(this.detach_Vul_Vulnerability));
			this._Wtp_WaysToPrevent = new EntitySet<Wtp_WaysToPrevent>(new Action<Wtp_WaysToPrevent>(this.attach_Wtp_WaysToPrevent), new Action<Wtp_WaysToPrevent>(this.detach_Wtp_WaysToPrevent));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chn_ID", Storage="_Chn_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Chn_ID
		{
			get
			{
				return this._Chn_ID;
			}
			set
			{
				if ((this._Chn_ID != value))
				{
					this.OnChn_IDChanging(value);
					this.SendPropertyChanging();
					this._Chn_ID = value;
					this.SendPropertyChanged("Chn_ID");
					this.OnChn_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chn_usr_ID", Storage="_Chn_usr_ID", DbType="Int NOT NULL")]
		public int Chn_usr_ID
		{
			get
			{
				return this._Chn_usr_ID;
			}
			set
			{
				if ((this._Chn_usr_ID != value))
				{
					this.OnChn_usr_IDChanging(value);
					this.SendPropertyChanging();
					this._Chn_usr_ID = value;
					this.SendPropertyChanged("Chn_usr_ID");
					this.OnChn_usr_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chn_ProblemBehavior", Storage="_Chn_ProblemBehavior", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Chn_ProblemBehavior
		{
			get
			{
				return this._Chn_ProblemBehavior;
			}
			set
			{
				if ((this._Chn_ProblemBehavior != value))
				{
					this.OnChn_ProblemBehaviorChanging(value);
					this.SendPropertyChanging();
					this._Chn_ProblemBehavior = value;
					this.SendPropertyChanged("Chn_ProblemBehavior");
					this.OnChn_ProblemBehaviorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chn_DateAndTime", Storage="_Chn_DateAndTime", DbType="DateTime NOT NULL")]
		public System.DateTime Chn_DateAndTime
		{
			get
			{
				return this._Chn_DateAndTime;
			}
			set
			{
				if ((this._Chn_DateAndTime != value))
				{
					this.OnChn_DateAndTimeChanging(value);
					this.SendPropertyChanging();
					this._Chn_DateAndTime = value;
					this.SendPropertyChanged("Chn_DateAndTime");
					this.OnChn_DateAndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chn_Location", Storage="_Chn_Location", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Chn_Location
		{
			get
			{
				return this._Chn_Location;
			}
			set
			{
				if ((this._Chn_Location != value))
				{
					this.OnChn_LocationChanging(value);
					this.SendPropertyChanging();
					this._Chn_Location = value;
					this.SendPropertyChanged("Chn_Location");
					this.OnChn_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bhv_Behavior_chn_ChainAnalysis", Storage="_Bhv_Behavior", ThisKey="Chn_ID", OtherKey="Bhv_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Bhv_Behavior> Bhv_Behavior
		{
			get
			{
				return this._Bhv_Behavior;
			}
			set
			{
				this._Bhv_Behavior.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_chn_ChainAnalysis_usr_User", Storage="_Usr_User", ThisKey="Chn_usr_ID", OtherKey="Usr_ID", IsForeignKey=true)]
		public Usr_User Usr_User
		{
			get
			{
				return this._Usr_User.Entity;
			}
			set
			{
				Usr_User previousValue = this._Usr_User.Entity;
				if (((previousValue != value) 
							|| (this._Usr_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usr_User.Entity = null;
						previousValue.Chn_ChainAnalysis.Remove(this);
					}
					this._Usr_User.Entity = value;
					if ((value != null))
					{
						value.Chn_ChainAnalysis.Add(this);
						this._Chn_usr_ID = value.Usr_ID;
					}
					else
					{
						this._Chn_usr_ID = default(int);
					}
					this.SendPropertyChanged("Usr_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_emt_Emotions_chn_ChainAnalysis", Storage="_Emt_Emotions", ThisKey="Chn_ID", OtherKey="Emt_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Emt_Emotions> Emt_Emotions
		{
			get
			{
				return this._Emt_Emotions;
			}
			set
			{
				this._Emt_Emotions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_gft_GoalsForTomorrow_chn_ChainAnalysis", Storage="_Gft_GoalsForTomorrow", ThisKey="Chn_ID", OtherKey="Gft_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Gft_GoalsForTomorrow> Gft_GoalsForTomorrow
		{
			get
			{
				return this._Gft_GoalsForTomorrow;
			}
			set
			{
				this._Gft_GoalsForTomorrow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_imc_ImmediateConsequences_chn_ChainAnalysis", Storage="_Imc_ImmediateConsequences", ThisKey="Chn_ID", OtherKey="Imc_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Imc_ImmediateConsequences> Imc_ImmediateConsequences
		{
			get
			{
				return this._Imc_ImmediateConsequences;
			}
			set
			{
				this._Imc_ImmediateConsequences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ltc_LongTermConsequences_chn_ChainAnalysis", Storage="_Ltc_LongTermConsequences", ThisKey="Chn_ID", OtherKey="Ltc_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Ltc_LongTermConsequences> Ltc_LongTermConsequences
		{
			get
			{
				return this._Ltc_LongTermConsequences;
			}
			set
			{
				this._Ltc_LongTermConsequences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ltg_LongTermGoal_chn_ChainAnalysis", Storage="_Ltg_LongTermGoal", ThisKey="Chn_ID", OtherKey="Ltg_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Ltg_LongTermGoal> Ltg_LongTermGoal
		{
			get
			{
				return this._Ltg_LongTermGoal;
			}
			set
			{
				this._Ltg_LongTermGoal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_stg_ShortTermGoals_chn_ChainAnalysis", Storage="_Stg_ShortTermGoals", ThisKey="Chn_ID", OtherKey="Stg_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Stg_ShortTermGoals> Stg_ShortTermGoals
		{
			get
			{
				return this._Stg_ShortTermGoals;
			}
			set
			{
				this._Stg_ShortTermGoals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_tht_Thought_chn_ChainAnalysis", Storage="_Tht_Thought", ThisKey="Chn_ID", OtherKey="Tht_chn_ID", DeleteRule="NO ACTION")]
		public EntitySet<Tht_Thought> Tht_Thought
		{
			get
			{
				return this._Tht_Thought;
			}
			set
			{
				this._Tht_Thought.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_vul_Vulnerability_chn_ChainAnalysis", Storage="_Vul_Vulnerability", ThisKey="Chn_ID", OtherKey="Vul_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Vul_Vulnerability> Vul_Vulnerability
		{
			get
			{
				return this._Vul_Vulnerability;
			}
			set
			{
				this._Vul_Vulnerability.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_wtp_WaysToPrevent_chn_ChainAnalysis", Storage="_Wtp_WaysToPrevent", ThisKey="Chn_ID", OtherKey="Wtp_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Wtp_WaysToPrevent> Wtp_WaysToPrevent
		{
			get
			{
				return this._Wtp_WaysToPrevent;
			}
			set
			{
				this._Wtp_WaysToPrevent.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bhv_Behavior(Bhv_Behavior entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Bhv_Behavior(Bhv_Behavior entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Emt_Emotions(Emt_Emotions entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Emt_Emotions(Emt_Emotions entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Gft_GoalsForTomorrow(Gft_GoalsForTomorrow entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Gft_GoalsForTomorrow(Gft_GoalsForTomorrow entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Imc_ImmediateConsequences(Imc_ImmediateConsequences entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Imc_ImmediateConsequences(Imc_ImmediateConsequences entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Ltc_LongTermConsequences(Ltc_LongTermConsequences entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Ltc_LongTermConsequences(Ltc_LongTermConsequences entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Ltg_LongTermGoal(Ltg_LongTermGoal entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Ltg_LongTermGoal(Ltg_LongTermGoal entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Stg_ShortTermGoals(Stg_ShortTermGoals entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Stg_ShortTermGoals(Stg_ShortTermGoals entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Tht_Thought(Tht_Thought entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Tht_Thought(Tht_Thought entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Vul_Vulnerability(Vul_Vulnerability entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Vul_Vulnerability(Vul_Vulnerability entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Wtp_WaysToPrevent(Wtp_WaysToPrevent entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Wtp_WaysToPrevent(Wtp_WaysToPrevent entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ctr_ConcentrationLog")]
	public partial class Ctr_ConcentrationLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ctr_id;
		
		private System.DateTime _Ctr_logDate;
		
		private int _Ctr_usr_id;
		
		private short _Ctr_concentrationLevels;
		
		private EntityRef<Usr_User> _Usr_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCtr_idChanging(int value);
    partial void OnCtr_idChanged();
    partial void OnCtr_logDateChanging(System.DateTime value);
    partial void OnCtr_logDateChanged();
    partial void OnCtr_usr_idChanging(int value);
    partial void OnCtr_usr_idChanged();
    partial void OnCtr_concentrationLevelsChanging(short value);
    partial void OnCtr_concentrationLevelsChanged();
    #endregion
		
		public Ctr_ConcentrationLog()
		{
			this._Usr_User = default(EntityRef<Usr_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ctr_id", Storage="_Ctr_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ctr_id
		{
			get
			{
				return this._Ctr_id;
			}
			set
			{
				if ((this._Ctr_id != value))
				{
					this.OnCtr_idChanging(value);
					this.SendPropertyChanging();
					this._Ctr_id = value;
					this.SendPropertyChanged("Ctr_id");
					this.OnCtr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ctr_logDate", Storage="_Ctr_logDate", DbType="DateTime NOT NULL")]
		public System.DateTime Ctr_logDate
		{
			get
			{
				return this._Ctr_logDate;
			}
			set
			{
				if ((this._Ctr_logDate != value))
				{
					this.OnCtr_logDateChanging(value);
					this.SendPropertyChanging();
					this._Ctr_logDate = value;
					this.SendPropertyChanged("Ctr_logDate");
					this.OnCtr_logDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ctr_usr_id", Storage="_Ctr_usr_id", DbType="Int NOT NULL")]
		public int Ctr_usr_id
		{
			get
			{
				return this._Ctr_usr_id;
			}
			set
			{
				if ((this._Ctr_usr_id != value))
				{
					this.OnCtr_usr_idChanging(value);
					this.SendPropertyChanging();
					this._Ctr_usr_id = value;
					this.SendPropertyChanged("Ctr_usr_id");
					this.OnCtr_usr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ctr_concentrationLevels", Storage="_Ctr_concentrationLevels", DbType="SmallInt NOT NULL")]
		public short Ctr_concentrationLevels
		{
			get
			{
				return this._Ctr_concentrationLevels;
			}
			set
			{
				if ((this._Ctr_concentrationLevels != value))
				{
					this.OnCtr_concentrationLevelsChanging(value);
					this.SendPropertyChanging();
					this._Ctr_concentrationLevels = value;
					this.SendPropertyChanged("Ctr_concentrationLevels");
					this.OnCtr_concentrationLevelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ctr_ConcentrationLog_usr_User", Storage="_Usr_User", ThisKey="Ctr_usr_id", OtherKey="Usr_ID", IsForeignKey=true)]
		public Usr_User Usr_User
		{
			get
			{
				return this._Usr_User.Entity;
			}
			set
			{
				Usr_User previousValue = this._Usr_User.Entity;
				if (((previousValue != value) 
							|| (this._Usr_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usr_User.Entity = null;
						previousValue.Ctr_ConcentrationLog.Remove(this);
					}
					this._Usr_User.Entity = value;
					if ((value != null))
					{
						value.Ctr_ConcentrationLog.Add(this);
						this._Ctr_usr_id = value.Usr_ID;
					}
					else
					{
						this._Ctr_usr_id = default(int);
					}
					this.SendPropertyChanged("Usr_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.eml_EmotionLog")]
	public partial class Eml_EmotionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Eml_ID;
		
		private System.DateTime _Eml_logTime;
		
		private int _Eml_usr_id;
		
		private int _Eml_pre_id;
		
		private short _Eml_intensity;
		
		private string _Eml_trigger;
		
		private EntityRef<Pre_PredefinedEmotion> _Pre_PredefinedEmotion;
		
		private EntityRef<Usr_User> _Usr_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEml_IDChanging(int value);
    partial void OnEml_IDChanged();
    partial void OnEml_logTimeChanging(System.DateTime value);
    partial void OnEml_logTimeChanged();
    partial void OnEml_usr_idChanging(int value);
    partial void OnEml_usr_idChanged();
    partial void OnEml_pre_idChanging(int value);
    partial void OnEml_pre_idChanged();
    partial void OnEml_intensityChanging(short value);
    partial void OnEml_intensityChanged();
    partial void OnEml_triggerChanging(string value);
    partial void OnEml_triggerChanged();
    #endregion
		
		public Eml_EmotionLog()
		{
			this._Pre_PredefinedEmotion = default(EntityRef<Pre_PredefinedEmotion>);
			this._Usr_User = default(EntityRef<Usr_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="eml_ID", Storage="_Eml_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Eml_ID
		{
			get
			{
				return this._Eml_ID;
			}
			set
			{
				if ((this._Eml_ID != value))
				{
					this.OnEml_IDChanging(value);
					this.SendPropertyChanging();
					this._Eml_ID = value;
					this.SendPropertyChanged("Eml_ID");
					this.OnEml_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="eml_logTime", Storage="_Eml_logTime", DbType="DateTime NOT NULL")]
		public System.DateTime Eml_logTime
		{
			get
			{
				return this._Eml_logTime;
			}
			set
			{
				if ((this._Eml_logTime != value))
				{
					this.OnEml_logTimeChanging(value);
					this.SendPropertyChanging();
					this._Eml_logTime = value;
					this.SendPropertyChanged("Eml_logTime");
					this.OnEml_logTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="eml_usr_id", Storage="_Eml_usr_id", DbType="Int NOT NULL")]
		public int Eml_usr_id
		{
			get
			{
				return this._Eml_usr_id;
			}
			set
			{
				if ((this._Eml_usr_id != value))
				{
					this.OnEml_usr_idChanging(value);
					this.SendPropertyChanging();
					this._Eml_usr_id = value;
					this.SendPropertyChanged("Eml_usr_id");
					this.OnEml_usr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="eml_pre_id", Storage="_Eml_pre_id", DbType="Int NOT NULL")]
		public int Eml_pre_id
		{
			get
			{
				return this._Eml_pre_id;
			}
			set
			{
				if ((this._Eml_pre_id != value))
				{
					this.OnEml_pre_idChanging(value);
					this.SendPropertyChanging();
					this._Eml_pre_id = value;
					this.SendPropertyChanged("Eml_pre_id");
					this.OnEml_pre_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="eml_intensity", Storage="_Eml_intensity", DbType="SmallInt NOT NULL")]
		public short Eml_intensity
		{
			get
			{
				return this._Eml_intensity;
			}
			set
			{
				if ((this._Eml_intensity != value))
				{
					this.OnEml_intensityChanging(value);
					this.SendPropertyChanging();
					this._Eml_intensity = value;
					this.SendPropertyChanged("Eml_intensity");
					this.OnEml_intensityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="eml_trigger", Storage="_Eml_trigger", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Eml_trigger
		{
			get
			{
				return this._Eml_trigger;
			}
			set
			{
				if ((this._Eml_trigger != value))
				{
					this.OnEml_triggerChanging(value);
					this.SendPropertyChanging();
					this._Eml_trigger = value;
					this.SendPropertyChanged("Eml_trigger");
					this.OnEml_triggerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_eml_EmotionLog_pre_PredefinedEmotion", Storage="_Pre_PredefinedEmotion", ThisKey="Eml_pre_id", OtherKey="Pre_ID", IsForeignKey=true)]
		public Pre_PredefinedEmotion Pre_PredefinedEmotion
		{
			get
			{
				return this._Pre_PredefinedEmotion.Entity;
			}
			set
			{
				Pre_PredefinedEmotion previousValue = this._Pre_PredefinedEmotion.Entity;
				if (((previousValue != value) 
							|| (this._Pre_PredefinedEmotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pre_PredefinedEmotion.Entity = null;
						previousValue.Eml_EmotionLog.Remove(this);
					}
					this._Pre_PredefinedEmotion.Entity = value;
					if ((value != null))
					{
						value.Eml_EmotionLog.Add(this);
						this._Eml_pre_id = value.Pre_ID;
					}
					else
					{
						this._Eml_pre_id = default(int);
					}
					this.SendPropertyChanged("Pre_PredefinedEmotion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_eml_EmotionLog_usr_User", Storage="_Usr_User", ThisKey="Eml_usr_id", OtherKey="Usr_ID", IsForeignKey=true)]
		public Usr_User Usr_User
		{
			get
			{
				return this._Usr_User.Entity;
			}
			set
			{
				Usr_User previousValue = this._Usr_User.Entity;
				if (((previousValue != value) 
							|| (this._Usr_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usr_User.Entity = null;
						previousValue.Eml_EmotionLog.Remove(this);
					}
					this._Usr_User.Entity = value;
					if ((value != null))
					{
						value.Eml_EmotionLog.Add(this);
						this._Eml_usr_id = value.Usr_ID;
					}
					else
					{
						this._Eml_usr_id = default(int);
					}
					this.SendPropertyChanged("Usr_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.emt_Emotions")]
	public partial class Emt_Emotions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Emt_order;
		
		private int _Emt_pre_id;
		
		private int _Emt_chn_id;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
		private EntityRef<Pre_PredefinedEmotion> _Pre_PredefinedEmotion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmt_orderChanging(int value);
    partial void OnEmt_orderChanged();
    partial void OnEmt_pre_idChanging(int value);
    partial void OnEmt_pre_idChanged();
    partial void OnEmt_chn_idChanging(int value);
    partial void OnEmt_chn_idChanged();
    #endregion
		
		public Emt_Emotions()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			this._Pre_PredefinedEmotion = default(EntityRef<Pre_PredefinedEmotion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="emt_order", Storage="_Emt_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Emt_order
		{
			get
			{
				return this._Emt_order;
			}
			set
			{
				if ((this._Emt_order != value))
				{
					this.OnEmt_orderChanging(value);
					this.SendPropertyChanging();
					this._Emt_order = value;
					this.SendPropertyChanged("Emt_order");
					this.OnEmt_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="emt_pre_id", Storage="_Emt_pre_id", DbType="Int NOT NULL")]
		public int Emt_pre_id
		{
			get
			{
				return this._Emt_pre_id;
			}
			set
			{
				if ((this._Emt_pre_id != value))
				{
					this.OnEmt_pre_idChanging(value);
					this.SendPropertyChanging();
					this._Emt_pre_id = value;
					this.SendPropertyChanged("Emt_pre_id");
					this.OnEmt_pre_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="emt_chn_id", Storage="_Emt_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Emt_chn_id
		{
			get
			{
				return this._Emt_chn_id;
			}
			set
			{
				if ((this._Emt_chn_id != value))
				{
					this.OnEmt_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Emt_chn_id = value;
					this.SendPropertyChanged("Emt_chn_id");
					this.OnEmt_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_emt_Emotions_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Emt_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Emt_Emotions.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Emt_Emotions.Add(this);
						this._Emt_chn_id = value.Chn_ID;
					}
					else
					{
						this._Emt_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_emt_Emotions_pre_PredefinedEmotion", Storage="_Pre_PredefinedEmotion", ThisKey="Emt_pre_id", OtherKey="Pre_ID", IsForeignKey=true)]
		public Pre_PredefinedEmotion Pre_PredefinedEmotion
		{
			get
			{
				return this._Pre_PredefinedEmotion.Entity;
			}
			set
			{
				Pre_PredefinedEmotion previousValue = this._Pre_PredefinedEmotion.Entity;
				if (((previousValue != value) 
							|| (this._Pre_PredefinedEmotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pre_PredefinedEmotion.Entity = null;
						previousValue.Emt_Emotions.Remove(this);
					}
					this._Pre_PredefinedEmotion.Entity = value;
					if ((value != null))
					{
						value.Emt_Emotions.Add(this);
						this._Emt_pre_id = value.Pre_ID;
					}
					else
					{
						this._Emt_pre_id = default(int);
					}
					this.SendPropertyChanged("Pre_PredefinedEmotion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.exi_ExerciseIntensity")]
	public partial class Exi_ExerciseIntensity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Exi_id;
		
		private string _Exi_intensity;
		
		private EntitySet<Exr_Exercise> _Exr_Exercise;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExi_idChanging(int value);
    partial void OnExi_idChanged();
    partial void OnExi_intensityChanging(string value);
    partial void OnExi_intensityChanged();
    #endregion
		
		public Exi_ExerciseIntensity()
		{
			this._Exr_Exercise = new EntitySet<Exr_Exercise>(new Action<Exr_Exercise>(this.attach_Exr_Exercise), new Action<Exr_Exercise>(this.detach_Exr_Exercise));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="exi_id", Storage="_Exi_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Exi_id
		{
			get
			{
				return this._Exi_id;
			}
			set
			{
				if ((this._Exi_id != value))
				{
					this.OnExi_idChanging(value);
					this.SendPropertyChanging();
					this._Exi_id = value;
					this.SendPropertyChanged("Exi_id");
					this.OnExi_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="exi_intensity", Storage="_Exi_intensity", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Exi_intensity
		{
			get
			{
				return this._Exi_intensity;
			}
			set
			{
				if ((this._Exi_intensity != value))
				{
					this.OnExi_intensityChanging(value);
					this.SendPropertyChanging();
					this._Exi_intensity = value;
					this.SendPropertyChanged("Exi_intensity");
					this.OnExi_intensityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_exr_Exercise_exi_ExerciseIntensity", Storage="_Exr_Exercise", ThisKey="Exi_id", OtherKey="Exr_exi_ID", DeleteRule="NO ACTION")]
		public EntitySet<Exr_Exercise> Exr_Exercise
		{
			get
			{
				return this._Exr_Exercise;
			}
			set
			{
				this._Exr_Exercise.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Exr_Exercise(Exr_Exercise entity)
		{
			this.SendPropertyChanging();
			entity.Exi_ExerciseIntensity = this;
		}
		
		private void detach_Exr_Exercise(Exr_Exercise entity)
		{
			this.SendPropertyChanging();
			entity.Exi_ExerciseIntensity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.exr_Exercise")]
	public partial class Exr_Exercise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Exr_ID;
		
		private int _Exr_usr_ID;
		
		private int _Exr_exi_ID;
		
		private System.DateTime _Exr_start;
		
		private System.DateTime _Exr_end;
		
		private int _Exr_ext_id;
		
		private EntityRef<Exi_ExerciseIntensity> _Exi_ExerciseIntensity;
		
		private EntityRef<Ext_ExerciseTypes> _Ext_ExerciseTypes;
		
		private EntityRef<Usr_User> _Usr_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExr_IDChanging(int value);
    partial void OnExr_IDChanged();
    partial void OnExr_usr_IDChanging(int value);
    partial void OnExr_usr_IDChanged();
    partial void OnExr_exi_IDChanging(int value);
    partial void OnExr_exi_IDChanged();
    partial void OnExr_startChanging(System.DateTime value);
    partial void OnExr_startChanged();
    partial void OnExr_endChanging(System.DateTime value);
    partial void OnExr_endChanged();
    partial void OnExr_ext_idChanging(int value);
    partial void OnExr_ext_idChanged();
    #endregion
		
		public Exr_Exercise()
		{
			this._Exi_ExerciseIntensity = default(EntityRef<Exi_ExerciseIntensity>);
			this._Ext_ExerciseTypes = default(EntityRef<Ext_ExerciseTypes>);
			this._Usr_User = default(EntityRef<Usr_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="exr_ID", Storage="_Exr_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Exr_ID
		{
			get
			{
				return this._Exr_ID;
			}
			set
			{
				if ((this._Exr_ID != value))
				{
					this.OnExr_IDChanging(value);
					this.SendPropertyChanging();
					this._Exr_ID = value;
					this.SendPropertyChanged("Exr_ID");
					this.OnExr_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="exr_usr_ID", Storage="_Exr_usr_ID", DbType="Int NOT NULL")]
		public int Exr_usr_ID
		{
			get
			{
				return this._Exr_usr_ID;
			}
			set
			{
				if ((this._Exr_usr_ID != value))
				{
					this.OnExr_usr_IDChanging(value);
					this.SendPropertyChanging();
					this._Exr_usr_ID = value;
					this.SendPropertyChanged("Exr_usr_ID");
					this.OnExr_usr_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="exr_exi_ID", Storage="_Exr_exi_ID", DbType="Int NOT NULL")]
		public int Exr_exi_ID
		{
			get
			{
				return this._Exr_exi_ID;
			}
			set
			{
				if ((this._Exr_exi_ID != value))
				{
					this.OnExr_exi_IDChanging(value);
					this.SendPropertyChanging();
					this._Exr_exi_ID = value;
					this.SendPropertyChanged("Exr_exi_ID");
					this.OnExr_exi_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="exr_start", Storage="_Exr_start", DbType="DateTime NOT NULL")]
		public System.DateTime Exr_start
		{
			get
			{
				return this._Exr_start;
			}
			set
			{
				if ((this._Exr_start != value))
				{
					this.OnExr_startChanging(value);
					this.SendPropertyChanging();
					this._Exr_start = value;
					this.SendPropertyChanged("Exr_start");
					this.OnExr_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="exr_end", Storage="_Exr_end", DbType="DateTime NOT NULL")]
		public System.DateTime Exr_end
		{
			get
			{
				return this._Exr_end;
			}
			set
			{
				if ((this._Exr_end != value))
				{
					this.OnExr_endChanging(value);
					this.SendPropertyChanging();
					this._Exr_end = value;
					this.SendPropertyChanged("Exr_end");
					this.OnExr_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="exr_ext_id", Storage="_Exr_ext_id", DbType="Int NOT NULL")]
		public int Exr_ext_id
		{
			get
			{
				return this._Exr_ext_id;
			}
			set
			{
				if ((this._Exr_ext_id != value))
				{
					this.OnExr_ext_idChanging(value);
					this.SendPropertyChanging();
					this._Exr_ext_id = value;
					this.SendPropertyChanged("Exr_ext_id");
					this.OnExr_ext_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_exr_Exercise_exi_ExerciseIntensity", Storage="_Exi_ExerciseIntensity", ThisKey="Exr_exi_ID", OtherKey="Exi_id", IsForeignKey=true)]
		public Exi_ExerciseIntensity Exi_ExerciseIntensity
		{
			get
			{
				return this._Exi_ExerciseIntensity.Entity;
			}
			set
			{
				Exi_ExerciseIntensity previousValue = this._Exi_ExerciseIntensity.Entity;
				if (((previousValue != value) 
							|| (this._Exi_ExerciseIntensity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exi_ExerciseIntensity.Entity = null;
						previousValue.Exr_Exercise.Remove(this);
					}
					this._Exi_ExerciseIntensity.Entity = value;
					if ((value != null))
					{
						value.Exr_Exercise.Add(this);
						this._Exr_exi_ID = value.Exi_id;
					}
					else
					{
						this._Exr_exi_ID = default(int);
					}
					this.SendPropertyChanged("Exi_ExerciseIntensity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_exr_Exercise_ext_ExerciseTypes", Storage="_Ext_ExerciseTypes", ThisKey="Exr_ext_id", OtherKey="Ext_ID", IsForeignKey=true)]
		public Ext_ExerciseTypes Ext_ExerciseTypes
		{
			get
			{
				return this._Ext_ExerciseTypes.Entity;
			}
			set
			{
				Ext_ExerciseTypes previousValue = this._Ext_ExerciseTypes.Entity;
				if (((previousValue != value) 
							|| (this._Ext_ExerciseTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ext_ExerciseTypes.Entity = null;
						previousValue.Exr_Exercise.Remove(this);
					}
					this._Ext_ExerciseTypes.Entity = value;
					if ((value != null))
					{
						value.Exr_Exercise.Add(this);
						this._Exr_ext_id = value.Ext_ID;
					}
					else
					{
						this._Exr_ext_id = default(int);
					}
					this.SendPropertyChanged("Ext_ExerciseTypes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_exr_Exercise_usr_User", Storage="_Usr_User", ThisKey="Exr_usr_ID", OtherKey="Usr_ID", IsForeignKey=true)]
		public Usr_User Usr_User
		{
			get
			{
				return this._Usr_User.Entity;
			}
			set
			{
				Usr_User previousValue = this._Usr_User.Entity;
				if (((previousValue != value) 
							|| (this._Usr_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usr_User.Entity = null;
						previousValue.Exr_Exercise.Remove(this);
					}
					this._Usr_User.Entity = value;
					if ((value != null))
					{
						value.Exr_Exercise.Add(this);
						this._Exr_usr_ID = value.Usr_ID;
					}
					else
					{
						this._Exr_usr_ID = default(int);
					}
					this.SendPropertyChanged("Usr_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ext_ExerciseTypes")]
	public partial class Ext_ExerciseTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ext_ID;
		
		private int _Ext_exi_intensity;
		
		private double _Ext_calories_per_hour;
		
		private string _Ext_name;
		
		private EntitySet<Exr_Exercise> _Exr_Exercise;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExt_IDChanging(int value);
    partial void OnExt_IDChanged();
    partial void OnExt_exi_intensityChanging(int value);
    partial void OnExt_exi_intensityChanged();
    partial void OnExt_calories_per_hourChanging(double value);
    partial void OnExt_calories_per_hourChanged();
    partial void OnExt_nameChanging(string value);
    partial void OnExt_nameChanged();
    #endregion
		
		public Ext_ExerciseTypes()
		{
			this._Exr_Exercise = new EntitySet<Exr_Exercise>(new Action<Exr_Exercise>(this.attach_Exr_Exercise), new Action<Exr_Exercise>(this.detach_Exr_Exercise));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ext_ID", Storage="_Ext_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ext_ID
		{
			get
			{
				return this._Ext_ID;
			}
			set
			{
				if ((this._Ext_ID != value))
				{
					this.OnExt_IDChanging(value);
					this.SendPropertyChanging();
					this._Ext_ID = value;
					this.SendPropertyChanged("Ext_ID");
					this.OnExt_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ext_exi_intensity", Storage="_Ext_exi_intensity", DbType="Int NOT NULL")]
		public int Ext_exi_intensity
		{
			get
			{
				return this._Ext_exi_intensity;
			}
			set
			{
				if ((this._Ext_exi_intensity != value))
				{
					this.OnExt_exi_intensityChanging(value);
					this.SendPropertyChanging();
					this._Ext_exi_intensity = value;
					this.SendPropertyChanged("Ext_exi_intensity");
					this.OnExt_exi_intensityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ext_calories_per_hour", Storage="_Ext_calories_per_hour", DbType="Float NOT NULL")]
		public double Ext_calories_per_hour
		{
			get
			{
				return this._Ext_calories_per_hour;
			}
			set
			{
				if ((this._Ext_calories_per_hour != value))
				{
					this.OnExt_calories_per_hourChanging(value);
					this.SendPropertyChanging();
					this._Ext_calories_per_hour = value;
					this.SendPropertyChanged("Ext_calories_per_hour");
					this.OnExt_calories_per_hourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ext_name", Storage="_Ext_name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Ext_name
		{
			get
			{
				return this._Ext_name;
			}
			set
			{
				if ((this._Ext_name != value))
				{
					this.OnExt_nameChanging(value);
					this.SendPropertyChanging();
					this._Ext_name = value;
					this.SendPropertyChanged("Ext_name");
					this.OnExt_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_exr_Exercise_ext_ExerciseTypes", Storage="_Exr_Exercise", ThisKey="Ext_ID", OtherKey="Exr_ext_id", DeleteRule="NO ACTION")]
		public EntitySet<Exr_Exercise> Exr_Exercise
		{
			get
			{
				return this._Exr_Exercise;
			}
			set
			{
				this._Exr_Exercise.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Exr_Exercise(Exr_Exercise entity)
		{
			this.SendPropertyChanging();
			entity.Ext_ExerciseTypes = this;
		}
		
		private void detach_Exr_Exercise(Exr_Exercise entity)
		{
			this.SendPropertyChanging();
			entity.Ext_ExerciseTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ftg_FatigueLevels")]
	public partial class Ftg_FatigueLevels : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ftg_ID;
		
		private short _Ftg_level;
		
		private System.DateTime _Ftg_logTime;
		
		private int _Ftg_usr_id;
		
		private EntityRef<Usr_User> _Usr_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFtg_IDChanging(int value);
    partial void OnFtg_IDChanged();
    partial void OnFtg_levelChanging(short value);
    partial void OnFtg_levelChanged();
    partial void OnFtg_logTimeChanging(System.DateTime value);
    partial void OnFtg_logTimeChanged();
    partial void OnFtg_usr_idChanging(int value);
    partial void OnFtg_usr_idChanged();
    #endregion
		
		public Ftg_FatigueLevels()
		{
			this._Usr_User = default(EntityRef<Usr_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ftg_ID", Storage="_Ftg_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ftg_ID
		{
			get
			{
				return this._Ftg_ID;
			}
			set
			{
				if ((this._Ftg_ID != value))
				{
					this.OnFtg_IDChanging(value);
					this.SendPropertyChanging();
					this._Ftg_ID = value;
					this.SendPropertyChanged("Ftg_ID");
					this.OnFtg_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ftg_level", Storage="_Ftg_level", DbType="SmallInt NOT NULL")]
		public short Ftg_level
		{
			get
			{
				return this._Ftg_level;
			}
			set
			{
				if ((this._Ftg_level != value))
				{
					this.OnFtg_levelChanging(value);
					this.SendPropertyChanging();
					this._Ftg_level = value;
					this.SendPropertyChanged("Ftg_level");
					this.OnFtg_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ftg_logTime", Storage="_Ftg_logTime", DbType="DateTime NOT NULL")]
		public System.DateTime Ftg_logTime
		{
			get
			{
				return this._Ftg_logTime;
			}
			set
			{
				if ((this._Ftg_logTime != value))
				{
					this.OnFtg_logTimeChanging(value);
					this.SendPropertyChanging();
					this._Ftg_logTime = value;
					this.SendPropertyChanged("Ftg_logTime");
					this.OnFtg_logTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ftg_usr_id", Storage="_Ftg_usr_id", DbType="Int NOT NULL")]
		public int Ftg_usr_id
		{
			get
			{
				return this._Ftg_usr_id;
			}
			set
			{
				if ((this._Ftg_usr_id != value))
				{
					this.OnFtg_usr_idChanging(value);
					this.SendPropertyChanging();
					this._Ftg_usr_id = value;
					this.SendPropertyChanged("Ftg_usr_id");
					this.OnFtg_usr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ftg_FatigueLevels_usr_User", Storage="_Usr_User", ThisKey="Ftg_usr_id", OtherKey="Usr_ID", IsForeignKey=true)]
		public Usr_User Usr_User
		{
			get
			{
				return this._Usr_User.Entity;
			}
			set
			{
				Usr_User previousValue = this._Usr_User.Entity;
				if (((previousValue != value) 
							|| (this._Usr_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usr_User.Entity = null;
						previousValue.Ftg_FatigueLevels.Remove(this);
					}
					this._Usr_User.Entity = value;
					if ((value != null))
					{
						value.Ftg_FatigueLevels.Add(this);
						this._Ftg_usr_id = value.Usr_ID;
					}
					else
					{
						this._Ftg_usr_id = default(int);
					}
					this.SendPropertyChanged("Usr_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gft_GoalsForTomorrow")]
	public partial class Gft_GoalsForTomorrow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Gft_order;
		
		private int _Gft_chn_id;
		
		private string _Gft_Goal;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGft_orderChanging(int value);
    partial void OnGft_orderChanged();
    partial void OnGft_chn_idChanging(int value);
    partial void OnGft_chn_idChanged();
    partial void OnGft_GoalChanging(string value);
    partial void OnGft_GoalChanged();
    #endregion
		
		public Gft_GoalsForTomorrow()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gft_order", Storage="_Gft_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Gft_order
		{
			get
			{
				return this._Gft_order;
			}
			set
			{
				if ((this._Gft_order != value))
				{
					this.OnGft_orderChanging(value);
					this.SendPropertyChanging();
					this._Gft_order = value;
					this.SendPropertyChanged("Gft_order");
					this.OnGft_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gft_chn_id", Storage="_Gft_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Gft_chn_id
		{
			get
			{
				return this._Gft_chn_id;
			}
			set
			{
				if ((this._Gft_chn_id != value))
				{
					this.OnGft_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Gft_chn_id = value;
					this.SendPropertyChanged("Gft_chn_id");
					this.OnGft_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gft_Goal", Storage="_Gft_Goal", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Gft_Goal
		{
			get
			{
				return this._Gft_Goal;
			}
			set
			{
				if ((this._Gft_Goal != value))
				{
					this.OnGft_GoalChanging(value);
					this.SendPropertyChanging();
					this._Gft_Goal = value;
					this.SendPropertyChanged("Gft_Goal");
					this.OnGft_GoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_gft_GoalsForTomorrow_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Gft_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Gft_GoalsForTomorrow.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Gft_GoalsForTomorrow.Add(this);
						this._Gft_chn_id = value.Chn_ID;
					}
					else
					{
						this._Gft_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gsr_GlobalSuggestions")]
	public partial class Gsr_GlobalSuggestions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Gsr_id;
		
		private string _Gsr_RewardName;
		
		private int _Gsr_CheckMarksNeeded;
		
		private EntitySet<Rwd_Rewards> _Rwd_Rewards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGsr_idChanging(int value);
    partial void OnGsr_idChanged();
    partial void OnGsr_RewardNameChanging(string value);
    partial void OnGsr_RewardNameChanged();
    partial void OnGsr_CheckMarksNeededChanging(int value);
    partial void OnGsr_CheckMarksNeededChanged();
    #endregion
		
		public Gsr_GlobalSuggestions()
		{
			this._Rwd_Rewards = new EntitySet<Rwd_Rewards>(new Action<Rwd_Rewards>(this.attach_Rwd_Rewards), new Action<Rwd_Rewards>(this.detach_Rwd_Rewards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gsr_id", Storage="_Gsr_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Gsr_id
		{
			get
			{
				return this._Gsr_id;
			}
			set
			{
				if ((this._Gsr_id != value))
				{
					this.OnGsr_idChanging(value);
					this.SendPropertyChanging();
					this._Gsr_id = value;
					this.SendPropertyChanged("Gsr_id");
					this.OnGsr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gsr_RewardName", Storage="_Gsr_RewardName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Gsr_RewardName
		{
			get
			{
				return this._Gsr_RewardName;
			}
			set
			{
				if ((this._Gsr_RewardName != value))
				{
					this.OnGsr_RewardNameChanging(value);
					this.SendPropertyChanging();
					this._Gsr_RewardName = value;
					this.SendPropertyChanged("Gsr_RewardName");
					this.OnGsr_RewardNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gsr_CheckMarksNeeded", Storage="_Gsr_CheckMarksNeeded", DbType="Int NOT NULL")]
		public int Gsr_CheckMarksNeeded
		{
			get
			{
				return this._Gsr_CheckMarksNeeded;
			}
			set
			{
				if ((this._Gsr_CheckMarksNeeded != value))
				{
					this.OnGsr_CheckMarksNeededChanging(value);
					this.SendPropertyChanging();
					this._Gsr_CheckMarksNeeded = value;
					this.SendPropertyChanged("Gsr_CheckMarksNeeded");
					this.OnGsr_CheckMarksNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_rwd_Rewards_usr_User", Storage="_Rwd_Rewards", ThisKey="Gsr_id", OtherKey="Rwd_gsr_id", DeleteRule="NO ACTION")]
		public EntitySet<Rwd_Rewards> Rwd_Rewards
		{
			get
			{
				return this._Rwd_Rewards;
			}
			set
			{
				this._Rwd_Rewards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rwd_Rewards(Rwd_Rewards entity)
		{
			this.SendPropertyChanging();
			entity.Gsr_GlobalSuggestions = this;
		}
		
		private void detach_Rwd_Rewards(Rwd_Rewards entity)
		{
			this.SendPropertyChanging();
			entity.Gsr_GlobalSuggestions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.imc_ImmediateConsequences")]
	public partial class Imc_ImmediateConsequences : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Imc_order;
		
		private int _Imc_chn_id;
		
		private string _Imc_Consequence;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImc_orderChanging(int value);
    partial void OnImc_orderChanged();
    partial void OnImc_chn_idChanging(int value);
    partial void OnImc_chn_idChanged();
    partial void OnImc_ConsequenceChanging(string value);
    partial void OnImc_ConsequenceChanged();
    #endregion
		
		public Imc_ImmediateConsequences()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="imc_order", Storage="_Imc_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Imc_order
		{
			get
			{
				return this._Imc_order;
			}
			set
			{
				if ((this._Imc_order != value))
				{
					this.OnImc_orderChanging(value);
					this.SendPropertyChanging();
					this._Imc_order = value;
					this.SendPropertyChanged("Imc_order");
					this.OnImc_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="imc_chn_id", Storage="_Imc_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Imc_chn_id
		{
			get
			{
				return this._Imc_chn_id;
			}
			set
			{
				if ((this._Imc_chn_id != value))
				{
					this.OnImc_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Imc_chn_id = value;
					this.SendPropertyChanged("Imc_chn_id");
					this.OnImc_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="imc_Consequence", Storage="_Imc_Consequence", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Imc_Consequence
		{
			get
			{
				return this._Imc_Consequence;
			}
			set
			{
				if ((this._Imc_Consequence != value))
				{
					this.OnImc_ConsequenceChanging(value);
					this.SendPropertyChanging();
					this._Imc_Consequence = value;
					this.SendPropertyChanged("Imc_Consequence");
					this.OnImc_ConsequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_imc_ImmediateConsequences_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Imc_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Imc_ImmediateConsequences.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Imc_ImmediateConsequences.Add(this);
						this._Imc_chn_id = value.Chn_ID;
					}
					else
					{
						this._Imc_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ltc_LongTermConsequences")]
	public partial class Ltc_LongTermConsequences : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ltc_order;
		
		private int _Ltc_chn_id;
		
		private string _Ltc_Consequence;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLtc_orderChanging(int value);
    partial void OnLtc_orderChanged();
    partial void OnLtc_chn_idChanging(int value);
    partial void OnLtc_chn_idChanged();
    partial void OnLtc_ConsequenceChanging(string value);
    partial void OnLtc_ConsequenceChanged();
    #endregion
		
		public Ltc_LongTermConsequences()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ltc_order", Storage="_Ltc_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ltc_order
		{
			get
			{
				return this._Ltc_order;
			}
			set
			{
				if ((this._Ltc_order != value))
				{
					this.OnLtc_orderChanging(value);
					this.SendPropertyChanging();
					this._Ltc_order = value;
					this.SendPropertyChanged("Ltc_order");
					this.OnLtc_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ltc_chn_id", Storage="_Ltc_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ltc_chn_id
		{
			get
			{
				return this._Ltc_chn_id;
			}
			set
			{
				if ((this._Ltc_chn_id != value))
				{
					this.OnLtc_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Ltc_chn_id = value;
					this.SendPropertyChanged("Ltc_chn_id");
					this.OnLtc_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ltc_Consequence", Storage="_Ltc_Consequence", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Ltc_Consequence
		{
			get
			{
				return this._Ltc_Consequence;
			}
			set
			{
				if ((this._Ltc_Consequence != value))
				{
					this.OnLtc_ConsequenceChanging(value);
					this.SendPropertyChanging();
					this._Ltc_Consequence = value;
					this.SendPropertyChanged("Ltc_Consequence");
					this.OnLtc_ConsequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ltc_LongTermConsequences_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Ltc_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Ltc_LongTermConsequences.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Ltc_LongTermConsequences.Add(this);
						this._Ltc_chn_id = value.Chn_ID;
					}
					else
					{
						this._Ltc_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ltg_LongTermGoal")]
	public partial class Ltg_LongTermGoal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ltg_order;
		
		private int _Ltg_chn_id;
		
		private string _Ltg_Goal;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLtg_orderChanging(int value);
    partial void OnLtg_orderChanged();
    partial void OnLtg_chn_idChanging(int value);
    partial void OnLtg_chn_idChanged();
    partial void OnLtg_GoalChanging(string value);
    partial void OnLtg_GoalChanged();
    #endregion
		
		public Ltg_LongTermGoal()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ltg_order", Storage="_Ltg_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ltg_order
		{
			get
			{
				return this._Ltg_order;
			}
			set
			{
				if ((this._Ltg_order != value))
				{
					this.OnLtg_orderChanging(value);
					this.SendPropertyChanging();
					this._Ltg_order = value;
					this.SendPropertyChanged("Ltg_order");
					this.OnLtg_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ltg_chn_id", Storage="_Ltg_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ltg_chn_id
		{
			get
			{
				return this._Ltg_chn_id;
			}
			set
			{
				if ((this._Ltg_chn_id != value))
				{
					this.OnLtg_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Ltg_chn_id = value;
					this.SendPropertyChanged("Ltg_chn_id");
					this.OnLtg_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ltg_Goal", Storage="_Ltg_Goal", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Ltg_Goal
		{
			get
			{
				return this._Ltg_Goal;
			}
			set
			{
				if ((this._Ltg_Goal != value))
				{
					this.OnLtg_GoalChanging(value);
					this.SendPropertyChanging();
					this._Ltg_Goal = value;
					this.SendPropertyChanged("Ltg_Goal");
					this.OnLtg_GoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ltg_LongTermGoal_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Ltg_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Ltg_LongTermGoal.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Ltg_LongTermGoal.Add(this);
						this._Ltg_chn_id = value.Chn_ID;
					}
					else
					{
						this._Ltg_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.prd_Product")]
	public partial class Prd_Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Prd_ID;
		
		private string _Prd_Name;
		
		private EntityRef<Cft_CaffeineType> _Cft_CaffeineType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrd_IDChanging(int value);
    partial void OnPrd_IDChanged();
    partial void OnPrd_NameChanging(string value);
    partial void OnPrd_NameChanged();
    #endregion
		
		public Prd_Product()
		{
			this._Cft_CaffeineType = default(EntityRef<Cft_CaffeineType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="prd_ID", Storage="_Prd_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Prd_ID
		{
			get
			{
				return this._Prd_ID;
			}
			set
			{
				if ((this._Prd_ID != value))
				{
					this.OnPrd_IDChanging(value);
					this.SendPropertyChanging();
					this._Prd_ID = value;
					this.SendPropertyChanged("Prd_ID");
					this.OnPrd_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="prd_Name", Storage="_Prd_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Prd_Name
		{
			get
			{
				return this._Prd_Name;
			}
			set
			{
				if ((this._Prd_Name != value))
				{
					this.OnPrd_NameChanging(value);
					this.SendPropertyChanging();
					this._Prd_Name = value;
					this.SendPropertyChanged("Prd_Name");
					this.OnPrd_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_cft_CaffeineType_prd_Product", Storage="_Cft_CaffeineType", ThisKey="Prd_ID", OtherKey="Cft_id", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public Cft_CaffeineType Cft_CaffeineType
		{
			get
			{
				return this._Cft_CaffeineType.Entity;
			}
			set
			{
				Cft_CaffeineType previousValue = this._Cft_CaffeineType.Entity;
				if (((previousValue != value) 
							|| (this._Cft_CaffeineType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cft_CaffeineType.Entity = null;
						previousValue.Cft_ = null;
					}
					this._Cft_CaffeineType.Entity = value;
					if ((value != null))
					{
						value.Cft_ = this;
					}
					this.SendPropertyChanged("Cft_CaffeineType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pre_PredefinedEmotion")]
	public partial class Pre_PredefinedEmotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pre_ID;
		
		private string _Pre_Emotion;
		
		private EntitySet<Eml_EmotionLog> _Eml_EmotionLog;
		
		private EntitySet<Emt_Emotions> _Emt_Emotions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPre_IDChanging(int value);
    partial void OnPre_IDChanged();
    partial void OnPre_EmotionChanging(string value);
    partial void OnPre_EmotionChanged();
    #endregion
		
		public Pre_PredefinedEmotion()
		{
			this._Eml_EmotionLog = new EntitySet<Eml_EmotionLog>(new Action<Eml_EmotionLog>(this.attach_Eml_EmotionLog), new Action<Eml_EmotionLog>(this.detach_Eml_EmotionLog));
			this._Emt_Emotions = new EntitySet<Emt_Emotions>(new Action<Emt_Emotions>(this.attach_Emt_Emotions), new Action<Emt_Emotions>(this.detach_Emt_Emotions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pre_ID", Storage="_Pre_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Pre_ID
		{
			get
			{
				return this._Pre_ID;
			}
			set
			{
				if ((this._Pre_ID != value))
				{
					this.OnPre_IDChanging(value);
					this.SendPropertyChanging();
					this._Pre_ID = value;
					this.SendPropertyChanged("Pre_ID");
					this.OnPre_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pre_Emotion", Storage="_Pre_Emotion", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Pre_Emotion
		{
			get
			{
				return this._Pre_Emotion;
			}
			set
			{
				if ((this._Pre_Emotion != value))
				{
					this.OnPre_EmotionChanging(value);
					this.SendPropertyChanging();
					this._Pre_Emotion = value;
					this.SendPropertyChanged("Pre_Emotion");
					this.OnPre_EmotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_eml_EmotionLog_pre_PredefinedEmotion", Storage="_Eml_EmotionLog", ThisKey="Pre_ID", OtherKey="Eml_pre_id", DeleteRule="NO ACTION")]
		public EntitySet<Eml_EmotionLog> Eml_EmotionLog
		{
			get
			{
				return this._Eml_EmotionLog;
			}
			set
			{
				this._Eml_EmotionLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_emt_Emotions_pre_PredefinedEmotion", Storage="_Emt_Emotions", ThisKey="Pre_ID", OtherKey="Emt_pre_id", DeleteRule="NO ACTION")]
		public EntitySet<Emt_Emotions> Emt_Emotions
		{
			get
			{
				return this._Emt_Emotions;
			}
			set
			{
				this._Emt_Emotions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Eml_EmotionLog(Eml_EmotionLog entity)
		{
			this.SendPropertyChanging();
			entity.Pre_PredefinedEmotion = this;
		}
		
		private void detach_Eml_EmotionLog(Eml_EmotionLog entity)
		{
			this.SendPropertyChanging();
			entity.Pre_PredefinedEmotion = null;
		}
		
		private void attach_Emt_Emotions(Emt_Emotions entity)
		{
			this.SendPropertyChanging();
			entity.Pre_PredefinedEmotion = this;
		}
		
		private void detach_Emt_Emotions(Emt_Emotions entity)
		{
			this.SendPropertyChanging();
			entity.Pre_PredefinedEmotion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rwd_Rewards")]
	public partial class Rwd_Rewards : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Rwd_usr_ID;
		
		private string _Rwd_RewardName;
		
		private System.Nullable<int> _Rwd_gsr_id;
		
		private System.Nullable<int> _Rwd_NumCheckMarksRequired;
		
		private int _Rwd_ID;
		
		private EntityRef<Rwd_Rewards> _Rwd_;
		
		private EntityRef<Rwd_Rewards> _Rwd_Rewards_rwd_Rewards;
		
		private EntityRef<Gsr_GlobalSuggestions> _Gsr_GlobalSuggestions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRwd_usr_IDChanging(int value);
    partial void OnRwd_usr_IDChanged();
    partial void OnRwd_RewardNameChanging(string value);
    partial void OnRwd_RewardNameChanged();
    partial void OnRwd_gsr_idChanging(System.Nullable<int> value);
    partial void OnRwd_gsr_idChanged();
    partial void OnRwd_NumCheckMarksRequiredChanging(System.Nullable<int> value);
    partial void OnRwd_NumCheckMarksRequiredChanged();
    partial void OnRwd_IDChanging(int value);
    partial void OnRwd_IDChanged();
    #endregion
		
		public Rwd_Rewards()
		{
			this._Rwd_ = default(EntityRef<Rwd_Rewards>);
			this._Rwd_Rewards_rwd_Rewards = default(EntityRef<Rwd_Rewards>);
			this._Gsr_GlobalSuggestions = default(EntityRef<Gsr_GlobalSuggestions>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rwd_usr_ID", Storage="_Rwd_usr_ID", DbType="Int NOT NULL")]
		public int Rwd_usr_ID
		{
			get
			{
				return this._Rwd_usr_ID;
			}
			set
			{
				if ((this._Rwd_usr_ID != value))
				{
					this.OnRwd_usr_IDChanging(value);
					this.SendPropertyChanging();
					this._Rwd_usr_ID = value;
					this.SendPropertyChanged("Rwd_usr_ID");
					this.OnRwd_usr_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rwd_RewardName", Storage="_Rwd_RewardName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Rwd_RewardName
		{
			get
			{
				return this._Rwd_RewardName;
			}
			set
			{
				if ((this._Rwd_RewardName != value))
				{
					this.OnRwd_RewardNameChanging(value);
					this.SendPropertyChanging();
					this._Rwd_RewardName = value;
					this.SendPropertyChanged("Rwd_RewardName");
					this.OnRwd_RewardNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rwd_gsr_id", Storage="_Rwd_gsr_id", DbType="Int")]
		public System.Nullable<int> Rwd_gsr_id
		{
			get
			{
				return this._Rwd_gsr_id;
			}
			set
			{
				if ((this._Rwd_gsr_id != value))
				{
					this.OnRwd_gsr_idChanging(value);
					this.SendPropertyChanging();
					this._Rwd_gsr_id = value;
					this.SendPropertyChanged("Rwd_gsr_id");
					this.OnRwd_gsr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rwd_NumCheckMarksRequired", Storage="_Rwd_NumCheckMarksRequired", DbType="Int")]
		public System.Nullable<int> Rwd_NumCheckMarksRequired
		{
			get
			{
				return this._Rwd_NumCheckMarksRequired;
			}
			set
			{
				if ((this._Rwd_NumCheckMarksRequired != value))
				{
					this.OnRwd_NumCheckMarksRequiredChanging(value);
					this.SendPropertyChanging();
					this._Rwd_NumCheckMarksRequired = value;
					this.SendPropertyChanged("Rwd_NumCheckMarksRequired");
					this.OnRwd_NumCheckMarksRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rwd_ID", Storage="_Rwd_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Rwd_ID
		{
			get
			{
				return this._Rwd_ID;
			}
			set
			{
				if ((this._Rwd_ID != value))
				{
					this.OnRwd_IDChanging(value);
					this.SendPropertyChanging();
					this._Rwd_ID = value;
					this.SendPropertyChanged("Rwd_ID");
					this.OnRwd_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_rwd_Rewards_rwd_Rewards", Storage="_Rwd_", ThisKey="Rwd_ID", OtherKey="Rwd_ID", IsForeignKey=true)]
		public Rwd_Rewards Rwd_
		{
			get
			{
				return this._Rwd_.Entity;
			}
			set
			{
				Rwd_Rewards previousValue = this._Rwd_.Entity;
				if (((previousValue != value) 
							|| (this._Rwd_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rwd_.Entity = null;
						previousValue.Rwd_Rewards_rwd_Rewards = null;
					}
					this._Rwd_.Entity = value;
					if ((value != null))
					{
						value.Rwd_Rewards_rwd_Rewards = this;
						this._Rwd_ID = value.Rwd_ID;
					}
					else
					{
						this._Rwd_ID = default(int);
					}
					this.SendPropertyChanged("Rwd_");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_rwd_Rewards_rwd_Rewards", Storage="_Rwd_Rewards_rwd_Rewards", ThisKey="Rwd_ID", OtherKey="Rwd_ID", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public Rwd_Rewards Rwd_Rewards_rwd_Rewards
		{
			get
			{
				return this._Rwd_Rewards_rwd_Rewards.Entity;
			}
			set
			{
				Rwd_Rewards previousValue = this._Rwd_Rewards_rwd_Rewards.Entity;
				if (((previousValue != value) 
							|| (this._Rwd_Rewards_rwd_Rewards.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rwd_Rewards_rwd_Rewards.Entity = null;
						previousValue.Rwd_ = null;
					}
					this._Rwd_Rewards_rwd_Rewards.Entity = value;
					if ((value != null))
					{
						value.Rwd_ = this;
					}
					this.SendPropertyChanged("Rwd_Rewards_rwd_Rewards");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_rwd_Rewards_usr_User", Storage="_Gsr_GlobalSuggestions", ThisKey="Rwd_gsr_id", OtherKey="Gsr_id", IsForeignKey=true)]
		public Gsr_GlobalSuggestions Gsr_GlobalSuggestions
		{
			get
			{
				return this._Gsr_GlobalSuggestions.Entity;
			}
			set
			{
				Gsr_GlobalSuggestions previousValue = this._Gsr_GlobalSuggestions.Entity;
				if (((previousValue != value) 
							|| (this._Gsr_GlobalSuggestions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gsr_GlobalSuggestions.Entity = null;
						previousValue.Rwd_Rewards.Remove(this);
					}
					this._Gsr_GlobalSuggestions.Entity = value;
					if ((value != null))
					{
						value.Rwd_Rewards.Add(this);
						this._Rwd_gsr_id = value.Gsr_id;
					}
					else
					{
						this._Rwd_gsr_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gsr_GlobalSuggestions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.slp_SleepLog")]
	public partial class Slp_SleepLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Slp_ID;
		
		private int _Slp_usr_ID;
		
		private System.DateTime _Slp_date;
		
		private System.Nullable<System.TimeSpan> _Slp_TimeToSleepUserLogged;
		
		private System.TimeSpan _Slp_TimeToBed;
		
		private System.Nullable<short> _Slp_SleepQuality;
		
		private System.Nullable<short> _Slp_FatigueLevel;
		
		private EntityRef<Awk_NighttimeAwakenings> _Awk_NighttimeAwakenings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlp_IDChanging(int value);
    partial void OnSlp_IDChanged();
    partial void OnSlp_usr_IDChanging(int value);
    partial void OnSlp_usr_IDChanged();
    partial void OnSlp_dateChanging(System.DateTime value);
    partial void OnSlp_dateChanged();
    partial void OnSlp_TimeToSleepUserLoggedChanging(System.Nullable<System.TimeSpan> value);
    partial void OnSlp_TimeToSleepUserLoggedChanged();
    partial void OnSlp_TimeToBedChanging(System.TimeSpan value);
    partial void OnSlp_TimeToBedChanged();
    partial void OnSlp_SleepQualityChanging(System.Nullable<short> value);
    partial void OnSlp_SleepQualityChanged();
    partial void OnSlp_FatigueLevelChanging(System.Nullable<short> value);
    partial void OnSlp_FatigueLevelChanged();
    #endregion
		
		public Slp_SleepLog()
		{
			this._Awk_NighttimeAwakenings = default(EntityRef<Awk_NighttimeAwakenings>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="slp_ID", Storage="_Slp_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Slp_ID
		{
			get
			{
				return this._Slp_ID;
			}
			set
			{
				if ((this._Slp_ID != value))
				{
					this.OnSlp_IDChanging(value);
					this.SendPropertyChanging();
					this._Slp_ID = value;
					this.SendPropertyChanged("Slp_ID");
					this.OnSlp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="slp_usr_ID", Storage="_Slp_usr_ID", DbType="Int NOT NULL")]
		public int Slp_usr_ID
		{
			get
			{
				return this._Slp_usr_ID;
			}
			set
			{
				if ((this._Slp_usr_ID != value))
				{
					this.OnSlp_usr_IDChanging(value);
					this.SendPropertyChanging();
					this._Slp_usr_ID = value;
					this.SendPropertyChanged("Slp_usr_ID");
					this.OnSlp_usr_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="slp_date", Storage="_Slp_date", DbType="Date NOT NULL")]
		public System.DateTime Slp_date
		{
			get
			{
				return this._Slp_date;
			}
			set
			{
				if ((this._Slp_date != value))
				{
					this.OnSlp_dateChanging(value);
					this.SendPropertyChanging();
					this._Slp_date = value;
					this.SendPropertyChanged("Slp_date");
					this.OnSlp_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="slp_TimeToSleepUserLogged", Storage="_Slp_TimeToSleepUserLogged", DbType="Time(7)")]
		public System.Nullable<System.TimeSpan> Slp_TimeToSleepUserLogged
		{
			get
			{
				return this._Slp_TimeToSleepUserLogged;
			}
			set
			{
				if ((this._Slp_TimeToSleepUserLogged != value))
				{
					this.OnSlp_TimeToSleepUserLoggedChanging(value);
					this.SendPropertyChanging();
					this._Slp_TimeToSleepUserLogged = value;
					this.SendPropertyChanged("Slp_TimeToSleepUserLogged");
					this.OnSlp_TimeToSleepUserLoggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="slp_TimeToBed", Storage="_Slp_TimeToBed", DbType="Time(7) NOT NULL")]
		public System.TimeSpan Slp_TimeToBed
		{
			get
			{
				return this._Slp_TimeToBed;
			}
			set
			{
				if ((this._Slp_TimeToBed != value))
				{
					this.OnSlp_TimeToBedChanging(value);
					this.SendPropertyChanging();
					this._Slp_TimeToBed = value;
					this.SendPropertyChanged("Slp_TimeToBed");
					this.OnSlp_TimeToBedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="slp_SleepQuality", Storage="_Slp_SleepQuality", DbType="SmallInt")]
		public System.Nullable<short> Slp_SleepQuality
		{
			get
			{
				return this._Slp_SleepQuality;
			}
			set
			{
				if ((this._Slp_SleepQuality != value))
				{
					this.OnSlp_SleepQualityChanging(value);
					this.SendPropertyChanging();
					this._Slp_SleepQuality = value;
					this.SendPropertyChanged("Slp_SleepQuality");
					this.OnSlp_SleepQualityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="slp_FatigueLevel", Storage="_Slp_FatigueLevel", DbType="SmallInt")]
		public System.Nullable<short> Slp_FatigueLevel
		{
			get
			{
				return this._Slp_FatigueLevel;
			}
			set
			{
				if ((this._Slp_FatigueLevel != value))
				{
					this.OnSlp_FatigueLevelChanging(value);
					this.SendPropertyChanging();
					this._Slp_FatigueLevel = value;
					this.SendPropertyChanged("Slp_FatigueLevel");
					this.OnSlp_FatigueLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_awk_NighttimeAwakenings_slp_SleepLog", Storage="_Awk_NighttimeAwakenings", ThisKey="Slp_ID", OtherKey="Awk_ID", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public Awk_NighttimeAwakenings Awk_NighttimeAwakenings
		{
			get
			{
				return this._Awk_NighttimeAwakenings.Entity;
			}
			set
			{
				Awk_NighttimeAwakenings previousValue = this._Awk_NighttimeAwakenings.Entity;
				if (((previousValue != value) 
							|| (this._Awk_NighttimeAwakenings.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Awk_NighttimeAwakenings.Entity = null;
						previousValue.Slp_SleepLog = null;
					}
					this._Awk_NighttimeAwakenings.Entity = value;
					if ((value != null))
					{
						value.Slp_SleepLog = this;
					}
					this.SendPropertyChanged("Awk_NighttimeAwakenings");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stg_ShortTermGoals")]
	public partial class Stg_ShortTermGoals : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Stg_order;
		
		private int _Stg_chn_id;
		
		private string _Stg_Goal;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStg_orderChanging(int value);
    partial void OnStg_orderChanged();
    partial void OnStg_chn_idChanging(int value);
    partial void OnStg_chn_idChanged();
    partial void OnStg_GoalChanging(string value);
    partial void OnStg_GoalChanged();
    #endregion
		
		public Stg_ShortTermGoals()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stg_order", Storage="_Stg_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Stg_order
		{
			get
			{
				return this._Stg_order;
			}
			set
			{
				if ((this._Stg_order != value))
				{
					this.OnStg_orderChanging(value);
					this.SendPropertyChanging();
					this._Stg_order = value;
					this.SendPropertyChanged("Stg_order");
					this.OnStg_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stg_chn_id", Storage="_Stg_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Stg_chn_id
		{
			get
			{
				return this._Stg_chn_id;
			}
			set
			{
				if ((this._Stg_chn_id != value))
				{
					this.OnStg_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Stg_chn_id = value;
					this.SendPropertyChanged("Stg_chn_id");
					this.OnStg_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stg_Goal", Storage="_Stg_Goal", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Stg_Goal
		{
			get
			{
				return this._Stg_Goal;
			}
			set
			{
				if ((this._Stg_Goal != value))
				{
					this.OnStg_GoalChanging(value);
					this.SendPropertyChanging();
					this._Stg_Goal = value;
					this.SendPropertyChanged("Stg_Goal");
					this.OnStg_GoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_stg_ShortTermGoals_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Stg_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Stg_ShortTermGoals.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Stg_ShortTermGoals.Add(this);
						this._Stg_chn_id = value.Chn_ID;
					}
					else
					{
						this._Stg_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tht_Thought")]
	public partial class Tht_Thought : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Tht_order;
		
		private int _Tht_chn_ID;
		
		private string _Tht_Thought1;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTht_orderChanging(int value);
    partial void OnTht_orderChanged();
    partial void OnTht_chn_IDChanging(int value);
    partial void OnTht_chn_IDChanged();
    partial void OnTht_Thought1Changing(string value);
    partial void OnTht_Thought1Changed();
    #endregion
		
		public Tht_Thought()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tht_order", Storage="_Tht_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Tht_order
		{
			get
			{
				return this._Tht_order;
			}
			set
			{
				if ((this._Tht_order != value))
				{
					this.OnTht_orderChanging(value);
					this.SendPropertyChanging();
					this._Tht_order = value;
					this.SendPropertyChanged("Tht_order");
					this.OnTht_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tht_chn_ID", Storage="_Tht_chn_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Tht_chn_ID
		{
			get
			{
				return this._Tht_chn_ID;
			}
			set
			{
				if ((this._Tht_chn_ID != value))
				{
					this.OnTht_chn_IDChanging(value);
					this.SendPropertyChanging();
					this._Tht_chn_ID = value;
					this.SendPropertyChanged("Tht_chn_ID");
					this.OnTht_chn_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tht_Thought", Storage="_Tht_Thought1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Tht_Thought1
		{
			get
			{
				return this._Tht_Thought1;
			}
			set
			{
				if ((this._Tht_Thought1 != value))
				{
					this.OnTht_Thought1Changing(value);
					this.SendPropertyChanging();
					this._Tht_Thought1 = value;
					this.SendPropertyChanged("Tht_Thought1");
					this.OnTht_Thought1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_tht_Thought_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Tht_chn_ID", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Tht_Thought.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Tht_Thought.Add(this);
						this._Tht_chn_ID = value.Chn_ID;
					}
					else
					{
						this._Tht_chn_ID = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usr_User")]
	public partial class Usr_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Usr_ID;
		
		private string _Usr_FirstName;
		
		private string _Usr_LastName;
		
		private int _Usr_CurrentChecks;
		
		private EntitySet<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
		private EntitySet<Ctr_ConcentrationLog> _Ctr_ConcentrationLog;
		
		private EntitySet<Eml_EmotionLog> _Eml_EmotionLog;
		
		private EntitySet<Exr_Exercise> _Exr_Exercise;
		
		private EntitySet<Ftg_FatigueLevels> _Ftg_FatigueLevels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsr_IDChanging(int value);
    partial void OnUsr_IDChanged();
    partial void OnUsr_FirstNameChanging(string value);
    partial void OnUsr_FirstNameChanged();
    partial void OnUsr_LastNameChanging(string value);
    partial void OnUsr_LastNameChanged();
    partial void OnUsr_CurrentChecksChanging(int value);
    partial void OnUsr_CurrentChecksChanged();
    #endregion
		
		public Usr_User()
		{
			this._Chn_ChainAnalysis = new EntitySet<Chn_ChainAnalysis>(new Action<Chn_ChainAnalysis>(this.attach_Chn_ChainAnalysis), new Action<Chn_ChainAnalysis>(this.detach_Chn_ChainAnalysis));
			this._Ctr_ConcentrationLog = new EntitySet<Ctr_ConcentrationLog>(new Action<Ctr_ConcentrationLog>(this.attach_Ctr_ConcentrationLog), new Action<Ctr_ConcentrationLog>(this.detach_Ctr_ConcentrationLog));
			this._Eml_EmotionLog = new EntitySet<Eml_EmotionLog>(new Action<Eml_EmotionLog>(this.attach_Eml_EmotionLog), new Action<Eml_EmotionLog>(this.detach_Eml_EmotionLog));
			this._Exr_Exercise = new EntitySet<Exr_Exercise>(new Action<Exr_Exercise>(this.attach_Exr_Exercise), new Action<Exr_Exercise>(this.detach_Exr_Exercise));
			this._Ftg_FatigueLevels = new EntitySet<Ftg_FatigueLevels>(new Action<Ftg_FatigueLevels>(this.attach_Ftg_FatigueLevels), new Action<Ftg_FatigueLevels>(this.detach_Ftg_FatigueLevels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usr_ID", Storage="_Usr_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Usr_ID
		{
			get
			{
				return this._Usr_ID;
			}
			set
			{
				if ((this._Usr_ID != value))
				{
					this.OnUsr_IDChanging(value);
					this.SendPropertyChanging();
					this._Usr_ID = value;
					this.SendPropertyChanged("Usr_ID");
					this.OnUsr_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usr_FirstName", Storage="_Usr_FirstName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Usr_FirstName
		{
			get
			{
				return this._Usr_FirstName;
			}
			set
			{
				if ((this._Usr_FirstName != value))
				{
					this.OnUsr_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._Usr_FirstName = value;
					this.SendPropertyChanged("Usr_FirstName");
					this.OnUsr_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usr_LastName", Storage="_Usr_LastName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Usr_LastName
		{
			get
			{
				return this._Usr_LastName;
			}
			set
			{
				if ((this._Usr_LastName != value))
				{
					this.OnUsr_LastNameChanging(value);
					this.SendPropertyChanging();
					this._Usr_LastName = value;
					this.SendPropertyChanged("Usr_LastName");
					this.OnUsr_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usr_CurrentChecks", Storage="_Usr_CurrentChecks", DbType="Int NOT NULL")]
		public int Usr_CurrentChecks
		{
			get
			{
				return this._Usr_CurrentChecks;
			}
			set
			{
				if ((this._Usr_CurrentChecks != value))
				{
					this.OnUsr_CurrentChecksChanging(value);
					this.SendPropertyChanging();
					this._Usr_CurrentChecks = value;
					this.SendPropertyChanged("Usr_CurrentChecks");
					this.OnUsr_CurrentChecksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_chn_ChainAnalysis_usr_User", Storage="_Chn_ChainAnalysis", ThisKey="Usr_ID", OtherKey="Chn_usr_ID", DeleteRule="NO ACTION")]
		public EntitySet<Chn_ChainAnalysis> Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis;
			}
			set
			{
				this._Chn_ChainAnalysis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ctr_ConcentrationLog_usr_User", Storage="_Ctr_ConcentrationLog", ThisKey="Usr_ID", OtherKey="Ctr_usr_id", DeleteRule="NO ACTION")]
		public EntitySet<Ctr_ConcentrationLog> Ctr_ConcentrationLog
		{
			get
			{
				return this._Ctr_ConcentrationLog;
			}
			set
			{
				this._Ctr_ConcentrationLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_eml_EmotionLog_usr_User", Storage="_Eml_EmotionLog", ThisKey="Usr_ID", OtherKey="Eml_usr_id", DeleteRule="NO ACTION")]
		public EntitySet<Eml_EmotionLog> Eml_EmotionLog
		{
			get
			{
				return this._Eml_EmotionLog;
			}
			set
			{
				this._Eml_EmotionLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_exr_Exercise_usr_User", Storage="_Exr_Exercise", ThisKey="Usr_ID", OtherKey="Exr_usr_ID", DeleteRule="NO ACTION")]
		public EntitySet<Exr_Exercise> Exr_Exercise
		{
			get
			{
				return this._Exr_Exercise;
			}
			set
			{
				this._Exr_Exercise.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ftg_FatigueLevels_usr_User", Storage="_Ftg_FatigueLevels", ThisKey="Usr_ID", OtherKey="Ftg_usr_id", DeleteRule="NO ACTION")]
		public EntitySet<Ftg_FatigueLevels> Ftg_FatigueLevels
		{
			get
			{
				return this._Ftg_FatigueLevels;
			}
			set
			{
				this._Ftg_FatigueLevels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chn_ChainAnalysis(Chn_ChainAnalysis entity)
		{
			this.SendPropertyChanging();
			entity.Usr_User = this;
		}
		
		private void detach_Chn_ChainAnalysis(Chn_ChainAnalysis entity)
		{
			this.SendPropertyChanging();
			entity.Usr_User = null;
		}
		
		private void attach_Ctr_ConcentrationLog(Ctr_ConcentrationLog entity)
		{
			this.SendPropertyChanging();
			entity.Usr_User = this;
		}
		
		private void detach_Ctr_ConcentrationLog(Ctr_ConcentrationLog entity)
		{
			this.SendPropertyChanging();
			entity.Usr_User = null;
		}
		
		private void attach_Eml_EmotionLog(Eml_EmotionLog entity)
		{
			this.SendPropertyChanging();
			entity.Usr_User = this;
		}
		
		private void detach_Eml_EmotionLog(Eml_EmotionLog entity)
		{
			this.SendPropertyChanging();
			entity.Usr_User = null;
		}
		
		private void attach_Exr_Exercise(Exr_Exercise entity)
		{
			this.SendPropertyChanging();
			entity.Usr_User = this;
		}
		
		private void detach_Exr_Exercise(Exr_Exercise entity)
		{
			this.SendPropertyChanging();
			entity.Usr_User = null;
		}
		
		private void attach_Ftg_FatigueLevels(Ftg_FatigueLevels entity)
		{
			this.SendPropertyChanging();
			entity.Usr_User = this;
		}
		
		private void detach_Ftg_FatigueLevels(Ftg_FatigueLevels entity)
		{
			this.SendPropertyChanging();
			entity.Usr_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vul_Vulnerability")]
	public partial class Vul_Vulnerability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Vul_order;
		
		private int _Vul_chn_id;
		
		private string _Vul_Vulnerability1;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVul_orderChanging(int value);
    partial void OnVul_orderChanged();
    partial void OnVul_chn_idChanging(int value);
    partial void OnVul_chn_idChanged();
    partial void OnVul_Vulnerability1Changing(string value);
    partial void OnVul_Vulnerability1Changed();
    #endregion
		
		public Vul_Vulnerability()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vul_order", Storage="_Vul_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Vul_order
		{
			get
			{
				return this._Vul_order;
			}
			set
			{
				if ((this._Vul_order != value))
				{
					this.OnVul_orderChanging(value);
					this.SendPropertyChanging();
					this._Vul_order = value;
					this.SendPropertyChanged("Vul_order");
					this.OnVul_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vul_chn_id", Storage="_Vul_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Vul_chn_id
		{
			get
			{
				return this._Vul_chn_id;
			}
			set
			{
				if ((this._Vul_chn_id != value))
				{
					this.OnVul_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Vul_chn_id = value;
					this.SendPropertyChanged("Vul_chn_id");
					this.OnVul_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vul_Vulnerability", Storage="_Vul_Vulnerability1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Vul_Vulnerability1
		{
			get
			{
				return this._Vul_Vulnerability1;
			}
			set
			{
				if ((this._Vul_Vulnerability1 != value))
				{
					this.OnVul_Vulnerability1Changing(value);
					this.SendPropertyChanging();
					this._Vul_Vulnerability1 = value;
					this.SendPropertyChanged("Vul_Vulnerability1");
					this.OnVul_Vulnerability1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_vul_Vulnerability_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Vul_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Vul_Vulnerability.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Vul_Vulnerability.Add(this);
						this._Vul_chn_id = value.Chn_ID;
					}
					else
					{
						this._Vul_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.wtp_WaysToPrevent")]
	public partial class Wtp_WaysToPrevent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Wtp_order;
		
		private int _Wtp_chn_id;
		
		private string _Wtp_WayToPrevent;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWtp_orderChanging(int value);
    partial void OnWtp_orderChanged();
    partial void OnWtp_chn_idChanging(int value);
    partial void OnWtp_chn_idChanged();
    partial void OnWtp_WayToPreventChanging(string value);
    partial void OnWtp_WayToPreventChanged();
    #endregion
		
		public Wtp_WaysToPrevent()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="wtp_order", Storage="_Wtp_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Wtp_order
		{
			get
			{
				return this._Wtp_order;
			}
			set
			{
				if ((this._Wtp_order != value))
				{
					this.OnWtp_orderChanging(value);
					this.SendPropertyChanging();
					this._Wtp_order = value;
					this.SendPropertyChanged("Wtp_order");
					this.OnWtp_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="wtp_chn_id", Storage="_Wtp_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Wtp_chn_id
		{
			get
			{
				return this._Wtp_chn_id;
			}
			set
			{
				if ((this._Wtp_chn_id != value))
				{
					this.OnWtp_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Wtp_chn_id = value;
					this.SendPropertyChanged("Wtp_chn_id");
					this.OnWtp_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="wtp_WayToPrevent", Storage="_Wtp_WayToPrevent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Wtp_WayToPrevent
		{
			get
			{
				return this._Wtp_WayToPrevent;
			}
			set
			{
				if ((this._Wtp_WayToPrevent != value))
				{
					this.OnWtp_WayToPreventChanging(value);
					this.SendPropertyChanging();
					this._Wtp_WayToPrevent = value;
					this.SendPropertyChanged("Wtp_WayToPrevent");
					this.OnWtp_WayToPreventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_wtp_WaysToPrevent_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Wtp_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Wtp_WaysToPrevent.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Wtp_WaysToPrevent.Add(this);
						this._Wtp_chn_id = value.Chn_ID;
					}
					else
					{
						this._Wtp_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Sp_helpdiagramdefinitionResult
	{
		
		private System.Nullable<int> _Version;
		
		private System.Data.Linq.Binary _Definition;
		
		public Sp_helpdiagramdefinitionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="version", Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="definition", Storage="_Definition", DbType="VarBinary(MAX)", CanBeNull=true)]
		public System.Data.Linq.Binary Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this._Definition = value;
				}
			}
		}
	}
	
	public partial class Sp_helpdiagramsResult
	{
		
		private string _Database;
		
		private string _Name;
		
		private System.Nullable<int> _ID;
		
		private string _Owner;
		
		private System.Nullable<int> _OwnerID;
		
		public Sp_helpdiagramsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Database", DbType="NVarChar(128)")]
		public string Database
		{
			get
			{
				return this._Database;
			}
			set
			{
				if ((this._Database != value))
				{
					this._Database = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="NVarChar(128)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this._Owner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int")]
		public System.Nullable<int> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
	}
	
	public partial class Usr_GetAllUsersResult
	{
		
		private System.Nullable<int> _Usr_ID;
		
		private string _Usr_FirstName;
		
		private string _Usr_LastName;
		
		private System.Nullable<int> _Usr_CurrentChecks;
		
		public Usr_GetAllUsersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usr_ID", Storage="_Usr_ID", DbType="Int")]
		public System.Nullable<int> Usr_ID
		{
			get
			{
				return this._Usr_ID;
			}
			set
			{
				if ((this._Usr_ID != value))
				{
					this._Usr_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usr_FirstName", Storage="_Usr_FirstName", DbType="VarChar(MAX)")]
		public string Usr_FirstName
		{
			get
			{
				return this._Usr_FirstName;
			}
			set
			{
				if ((this._Usr_FirstName != value))
				{
					this._Usr_FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usr_LastName", Storage="_Usr_LastName", DbType="VarChar(MAX)")]
		public string Usr_LastName
		{
			get
			{
				return this._Usr_LastName;
			}
			set
			{
				if ((this._Usr_LastName != value))
				{
					this._Usr_LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usr_CurrentChecks", Storage="_Usr_CurrentChecks", DbType="Int")]
		public System.Nullable<int> Usr_CurrentChecks
		{
			get
			{
				return this._Usr_CurrentChecks;
			}
			set
			{
				if ((this._Usr_CurrentChecks != value))
				{
					this._Usr_CurrentChecks = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
