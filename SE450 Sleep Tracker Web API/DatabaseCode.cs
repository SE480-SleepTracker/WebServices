#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBInteraction
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class SleepMonitor : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBhv_Behavior(Bhv_Behavior instance);
    partial void UpdateBhv_Behavior(Bhv_Behavior instance);
    partial void DeleteBhv_Behavior(Bhv_Behavior instance);
    partial void InsertChn_ChainAnalysis(Chn_ChainAnalysis instance);
    partial void UpdateChn_ChainAnalysis(Chn_ChainAnalysis instance);
    partial void DeleteChn_ChainAnalysis(Chn_ChainAnalysis instance);
    partial void InsertEmt_Emotions(Emt_Emotions instance);
    partial void UpdateEmt_Emotions(Emt_Emotions instance);
    partial void DeleteEmt_Emotions(Emt_Emotions instance);
    partial void InsertGft_GoalsForTomorrow(Gft_GoalsForTomorrow instance);
    partial void UpdateGft_GoalsForTomorrow(Gft_GoalsForTomorrow instance);
    partial void DeleteGft_GoalsForTomorrow(Gft_GoalsForTomorrow instance);
    partial void InsertGsr_GlobalSuggestions(Gsr_GlobalSuggestions instance);
    partial void UpdateGsr_GlobalSuggestions(Gsr_GlobalSuggestions instance);
    partial void DeleteGsr_GlobalSuggestions(Gsr_GlobalSuggestions instance);
    partial void InsertImc_ImmediateConsequences(Imc_ImmediateConsequences instance);
    partial void UpdateImc_ImmediateConsequences(Imc_ImmediateConsequences instance);
    partial void DeleteImc_ImmediateConsequences(Imc_ImmediateConsequences instance);
    partial void InsertLtc_LongTermConsequences(Ltc_LongTermConsequences instance);
    partial void UpdateLtc_LongTermConsequences(Ltc_LongTermConsequences instance);
    partial void DeleteLtc_LongTermConsequences(Ltc_LongTermConsequences instance);
    partial void InsertLtg_LongTermGoal(Ltg_LongTermGoal instance);
    partial void UpdateLtg_LongTermGoal(Ltg_LongTermGoal instance);
    partial void DeleteLtg_LongTermGoal(Ltg_LongTermGoal instance);
    partial void InsertPre_PredefinedEmotion(Pre_PredefinedEmotion instance);
    partial void UpdatePre_PredefinedEmotion(Pre_PredefinedEmotion instance);
    partial void DeletePre_PredefinedEmotion(Pre_PredefinedEmotion instance);
    partial void InsertRwd_Rewards(Rwd_Rewards instance);
    partial void UpdateRwd_Rewards(Rwd_Rewards instance);
    partial void DeleteRwd_Rewards(Rwd_Rewards instance);
    partial void InsertStg_ShortTermGoals(Stg_ShortTermGoals instance);
    partial void UpdateStg_ShortTermGoals(Stg_ShortTermGoals instance);
    partial void DeleteStg_ShortTermGoals(Stg_ShortTermGoals instance);
    partial void InsertTht_Thought(Tht_Thought instance);
    partial void UpdateTht_Thought(Tht_Thought instance);
    partial void DeleteTht_Thought(Tht_Thought instance);
    partial void InsertUsr_User(Usr_User instance);
    partial void UpdateUsr_User(Usr_User instance);
    partial void DeleteUsr_User(Usr_User instance);
    partial void InsertVul_Vulnerability(Vul_Vulnerability instance);
    partial void UpdateVul_Vulnerability(Vul_Vulnerability instance);
    partial void DeleteVul_Vulnerability(Vul_Vulnerability instance);
    partial void InsertWtp_WaysToPrevent(Wtp_WaysToPrevent instance);
    partial void UpdateWtp_WaysToPrevent(Wtp_WaysToPrevent instance);
    partial void DeleteWtp_WaysToPrevent(Wtp_WaysToPrevent instance);
    #endregion
		
		public SleepMonitor(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SleepMonitor(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SleepMonitor(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SleepMonitor(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bhv_Behavior> Bhv_Behavior
		{
			get
			{
				return this.GetTable<Bhv_Behavior>();
			}
		}
		
		public System.Data.Linq.Table<Chn_ChainAnalysis> Chn_ChainAnalysis
		{
			get
			{
				return this.GetTable<Chn_ChainAnalysis>();
			}
		}
		
		public System.Data.Linq.Table<Emt_Emotions> Emt_Emotions
		{
			get
			{
				return this.GetTable<Emt_Emotions>();
			}
		}
		
		public System.Data.Linq.Table<Gft_GoalsForTomorrow> Gft_GoalsForTomorrow
		{
			get
			{
				return this.GetTable<Gft_GoalsForTomorrow>();
			}
		}
		
		public System.Data.Linq.Table<Gsr_GlobalSuggestions> Gsr_GlobalSuggestions
		{
			get
			{
				return this.GetTable<Gsr_GlobalSuggestions>();
			}
		}
		
		public System.Data.Linq.Table<Imc_ImmediateConsequences> Imc_ImmediateConsequences
		{
			get
			{
				return this.GetTable<Imc_ImmediateConsequences>();
			}
		}
		
		public System.Data.Linq.Table<Ltc_LongTermConsequences> Ltc_LongTermConsequences
		{
			get
			{
				return this.GetTable<Ltc_LongTermConsequences>();
			}
		}
		
		public System.Data.Linq.Table<Ltg_LongTermGoal> Ltg_LongTermGoal
		{
			get
			{
				return this.GetTable<Ltg_LongTermGoal>();
			}
		}
		
		public System.Data.Linq.Table<Pre_PredefinedEmotion> Pre_PredefinedEmotion
		{
			get
			{
				return this.GetTable<Pre_PredefinedEmotion>();
			}
		}
		
		public System.Data.Linq.Table<Rwd_Rewards> Rwd_Rewards
		{
			get
			{
				return this.GetTable<Rwd_Rewards>();
			}
		}
		
		public System.Data.Linq.Table<Stg_ShortTermGoals> Stg_ShortTermGoals
		{
			get
			{
				return this.GetTable<Stg_ShortTermGoals>();
			}
		}
		
		public System.Data.Linq.Table<Tht_Thought> Tht_Thought
		{
			get
			{
				return this.GetTable<Tht_Thought>();
			}
		}
		
		public System.Data.Linq.Table<Usr_User> Usr_User
		{
			get
			{
				return this.GetTable<Usr_User>();
			}
		}
		
		public System.Data.Linq.Table<Vul_Vulnerability> Vul_Vulnerability
		{
			get
			{
				return this.GetTable<Vul_Vulnerability>();
			}
		}
		
		public System.Data.Linq.Table<Wtp_WaysToPrevent> Wtp_WaysToPrevent
		{
			get
			{
				return this.GetTable<Wtp_WaysToPrevent>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bhv_Behavior")]
	public partial class Bhv_Behavior : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Bhv_order;
		
		private int _Bhv_chn_id;
		
		private string _Bhv_BehaviorDesc;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBhv_orderChanging(int value);
    partial void OnBhv_orderChanged();
    partial void OnBhv_chn_idChanging(int value);
    partial void OnBhv_chn_idChanged();
    partial void OnBhv_BehaviorDescChanging(string value);
    partial void OnBhv_BehaviorDescChanged();
    #endregion
		
		public Bhv_Behavior()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bhv_order", Storage="_Bhv_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Bhv_order
		{
			get
			{
				return this._Bhv_order;
			}
			set
			{
				if ((this._Bhv_order != value))
				{
					this.OnBhv_orderChanging(value);
					this.SendPropertyChanging();
					this._Bhv_order = value;
					this.SendPropertyChanged("Bhv_order");
					this.OnBhv_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bhv_chn_id", Storage="_Bhv_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Bhv_chn_id
		{
			get
			{
				return this._Bhv_chn_id;
			}
			set
			{
				if ((this._Bhv_chn_id != value))
				{
					this.OnBhv_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Bhv_chn_id = value;
					this.SendPropertyChanged("Bhv_chn_id");
					this.OnBhv_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bhv_BehaviorDesc", Storage="_Bhv_BehaviorDesc", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Bhv_BehaviorDesc
		{
			get
			{
				return this._Bhv_BehaviorDesc;
			}
			set
			{
				if ((this._Bhv_BehaviorDesc != value))
				{
					this.OnBhv_BehaviorDescChanging(value);
					this.SendPropertyChanging();
					this._Bhv_BehaviorDesc = value;
					this.SendPropertyChanged("Bhv_BehaviorDesc");
					this.OnBhv_BehaviorDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bhv_Behavior_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Bhv_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Bhv_Behavior.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Bhv_Behavior.Add(this);
						this._Bhv_chn_id = value.Chn_ID;
					}
					else
					{
						this._Bhv_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chn_ChainAnalysis")]
	public partial class Chn_ChainAnalysis : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Chn_ID;
		
		private int _Chn_usr_ID;
		
		private string _Chn_ProblemBehavior;
		
		private System.DateTime _Chn_DateAndTime;
		
		private string _Chn_Location;
		
		private EntitySet<Bhv_Behavior> _Bhv_Behavior;
		
		private EntityRef<Usr_User> _Usr_User;
		
		private EntitySet<Emt_Emotions> _Emt_Emotions;
		
		private EntitySet<Gft_GoalsForTomorrow> _Gft_GoalsForTomorrow;
		
		private EntitySet<Imc_ImmediateConsequences> _Imc_ImmediateConsequences;
		
		private EntitySet<Ltc_LongTermConsequences> _Ltc_LongTermConsequences;
		
		private EntitySet<Ltg_LongTermGoal> _Ltg_LongTermGoal;
		
		private EntitySet<Stg_ShortTermGoals> _Stg_ShortTermGoals;
		
		private EntitySet<Tht_Thought> _Tht_Thought;
		
		private EntitySet<Vul_Vulnerability> _Vul_Vulnerability;
		
		private EntitySet<Wtp_WaysToPrevent> _Wtp_WaysToPrevent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChn_IDChanging(int value);
    partial void OnChn_IDChanged();
    partial void OnChn_usr_IDChanging(int value);
    partial void OnChn_usr_IDChanged();
    partial void OnChn_ProblemBehaviorChanging(string value);
    partial void OnChn_ProblemBehaviorChanged();
    partial void OnChn_DateAndTimeChanging(System.DateTime value);
    partial void OnChn_DateAndTimeChanged();
    partial void OnChn_LocationChanging(string value);
    partial void OnChn_LocationChanged();
    #endregion
		
		public Chn_ChainAnalysis()
		{
			this._Bhv_Behavior = new EntitySet<Bhv_Behavior>(new Action<Bhv_Behavior>(this.attach_Bhv_Behavior), new Action<Bhv_Behavior>(this.detach_Bhv_Behavior));
			this._Usr_User = default(EntityRef<Usr_User>);
			this._Emt_Emotions = new EntitySet<Emt_Emotions>(new Action<Emt_Emotions>(this.attach_Emt_Emotions), new Action<Emt_Emotions>(this.detach_Emt_Emotions));
			this._Gft_GoalsForTomorrow = new EntitySet<Gft_GoalsForTomorrow>(new Action<Gft_GoalsForTomorrow>(this.attach_Gft_GoalsForTomorrow), new Action<Gft_GoalsForTomorrow>(this.detach_Gft_GoalsForTomorrow));
			this._Imc_ImmediateConsequences = new EntitySet<Imc_ImmediateConsequences>(new Action<Imc_ImmediateConsequences>(this.attach_Imc_ImmediateConsequences), new Action<Imc_ImmediateConsequences>(this.detach_Imc_ImmediateConsequences));
			this._Ltc_LongTermConsequences = new EntitySet<Ltc_LongTermConsequences>(new Action<Ltc_LongTermConsequences>(this.attach_Ltc_LongTermConsequences), new Action<Ltc_LongTermConsequences>(this.detach_Ltc_LongTermConsequences));
			this._Ltg_LongTermGoal = new EntitySet<Ltg_LongTermGoal>(new Action<Ltg_LongTermGoal>(this.attach_Ltg_LongTermGoal), new Action<Ltg_LongTermGoal>(this.detach_Ltg_LongTermGoal));
			this._Stg_ShortTermGoals = new EntitySet<Stg_ShortTermGoals>(new Action<Stg_ShortTermGoals>(this.attach_Stg_ShortTermGoals), new Action<Stg_ShortTermGoals>(this.detach_Stg_ShortTermGoals));
			this._Tht_Thought = new EntitySet<Tht_Thought>(new Action<Tht_Thought>(this.attach_Tht_Thought), new Action<Tht_Thought>(this.detach_Tht_Thought));
			this._Vul_Vulnerability = new EntitySet<Vul_Vulnerability>(new Action<Vul_Vulnerability>(this.attach_Vul_Vulnerability), new Action<Vul_Vulnerability>(this.detach_Vul_Vulnerability));
			this._Wtp_WaysToPrevent = new EntitySet<Wtp_WaysToPrevent>(new Action<Wtp_WaysToPrevent>(this.attach_Wtp_WaysToPrevent), new Action<Wtp_WaysToPrevent>(this.detach_Wtp_WaysToPrevent));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chn_ID", Storage="_Chn_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Chn_ID
		{
			get
			{
				return this._Chn_ID;
			}
			set
			{
				if ((this._Chn_ID != value))
				{
					this.OnChn_IDChanging(value);
					this.SendPropertyChanging();
					this._Chn_ID = value;
					this.SendPropertyChanged("Chn_ID");
					this.OnChn_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chn_usr_ID", Storage="_Chn_usr_ID", DbType="Int NOT NULL")]
		public int Chn_usr_ID
		{
			get
			{
				return this._Chn_usr_ID;
			}
			set
			{
				if ((this._Chn_usr_ID != value))
				{
					this.OnChn_usr_IDChanging(value);
					this.SendPropertyChanging();
					this._Chn_usr_ID = value;
					this.SendPropertyChanged("Chn_usr_ID");
					this.OnChn_usr_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chn_ProblemBehavior", Storage="_Chn_ProblemBehavior", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Chn_ProblemBehavior
		{
			get
			{
				return this._Chn_ProblemBehavior;
			}
			set
			{
				if ((this._Chn_ProblemBehavior != value))
				{
					this.OnChn_ProblemBehaviorChanging(value);
					this.SendPropertyChanging();
					this._Chn_ProblemBehavior = value;
					this.SendPropertyChanged("Chn_ProblemBehavior");
					this.OnChn_ProblemBehaviorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chn_DateAndTime", Storage="_Chn_DateAndTime", DbType="DateTime NOT NULL")]
		public System.DateTime Chn_DateAndTime
		{
			get
			{
				return this._Chn_DateAndTime;
			}
			set
			{
				if ((this._Chn_DateAndTime != value))
				{
					this.OnChn_DateAndTimeChanging(value);
					this.SendPropertyChanging();
					this._Chn_DateAndTime = value;
					this.SendPropertyChanged("Chn_DateAndTime");
					this.OnChn_DateAndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="chn_Location", Storage="_Chn_Location", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Chn_Location
		{
			get
			{
				return this._Chn_Location;
			}
			set
			{
				if ((this._Chn_Location != value))
				{
					this.OnChn_LocationChanging(value);
					this.SendPropertyChanging();
					this._Chn_Location = value;
					this.SendPropertyChanged("Chn_Location");
					this.OnChn_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_bhv_Behavior_chn_ChainAnalysis", Storage="_Bhv_Behavior", ThisKey="Chn_ID", OtherKey="Bhv_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Bhv_Behavior> Bhv_Behavior
		{
			get
			{
				return this._Bhv_Behavior;
			}
			set
			{
				this._Bhv_Behavior.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_chn_ChainAnalysis_usr_User", Storage="_Usr_User", ThisKey="Chn_usr_ID", OtherKey="Usr_ID", IsForeignKey=true)]
		public Usr_User Usr_User
		{
			get
			{
				return this._Usr_User.Entity;
			}
			set
			{
				Usr_User previousValue = this._Usr_User.Entity;
				if (((previousValue != value) 
							|| (this._Usr_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usr_User.Entity = null;
						previousValue.Chn_ChainAnalysis.Remove(this);
					}
					this._Usr_User.Entity = value;
					if ((value != null))
					{
						value.Chn_ChainAnalysis.Add(this);
						this._Chn_usr_ID = value.Usr_ID;
					}
					else
					{
						this._Chn_usr_ID = default(int);
					}
					this.SendPropertyChanged("Usr_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_emt_Emotions_chn_ChainAnalysis", Storage="_Emt_Emotions", ThisKey="Chn_ID", OtherKey="Emt_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Emt_Emotions> Emt_Emotions
		{
			get
			{
				return this._Emt_Emotions;
			}
			set
			{
				this._Emt_Emotions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_gft_GoalsForTomorrow_chn_ChainAnalysis", Storage="_Gft_GoalsForTomorrow", ThisKey="Chn_ID", OtherKey="Gft_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Gft_GoalsForTomorrow> Gft_GoalsForTomorrow
		{
			get
			{
				return this._Gft_GoalsForTomorrow;
			}
			set
			{
				this._Gft_GoalsForTomorrow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_imc_ImmediateConsequences_chn_ChainAnalysis", Storage="_Imc_ImmediateConsequences", ThisKey="Chn_ID", OtherKey="Imc_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Imc_ImmediateConsequences> Imc_ImmediateConsequences
		{
			get
			{
				return this._Imc_ImmediateConsequences;
			}
			set
			{
				this._Imc_ImmediateConsequences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ltc_LongTermConsequences_chn_ChainAnalysis", Storage="_Ltc_LongTermConsequences", ThisKey="Chn_ID", OtherKey="Ltc_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Ltc_LongTermConsequences> Ltc_LongTermConsequences
		{
			get
			{
				return this._Ltc_LongTermConsequences;
			}
			set
			{
				this._Ltc_LongTermConsequences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ltg_LongTermGoal_chn_ChainAnalysis", Storage="_Ltg_LongTermGoal", ThisKey="Chn_ID", OtherKey="Ltg_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Ltg_LongTermGoal> Ltg_LongTermGoal
		{
			get
			{
				return this._Ltg_LongTermGoal;
			}
			set
			{
				this._Ltg_LongTermGoal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_stg_ShortTermGoals_chn_ChainAnalysis", Storage="_Stg_ShortTermGoals", ThisKey="Chn_ID", OtherKey="Stg_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Stg_ShortTermGoals> Stg_ShortTermGoals
		{
			get
			{
				return this._Stg_ShortTermGoals;
			}
			set
			{
				this._Stg_ShortTermGoals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_tht_Thought_chn_ChainAnalysis", Storage="_Tht_Thought", ThisKey="Chn_ID", OtherKey="Tht_chn_ID", DeleteRule="NO ACTION")]
		public EntitySet<Tht_Thought> Tht_Thought
		{
			get
			{
				return this._Tht_Thought;
			}
			set
			{
				this._Tht_Thought.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_vul_Vulnerability_chn_ChainAnalysis", Storage="_Vul_Vulnerability", ThisKey="Chn_ID", OtherKey="Vul_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Vul_Vulnerability> Vul_Vulnerability
		{
			get
			{
				return this._Vul_Vulnerability;
			}
			set
			{
				this._Vul_Vulnerability.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_wtp_WaysToPrevent_chn_ChainAnalysis", Storage="_Wtp_WaysToPrevent", ThisKey="Chn_ID", OtherKey="Wtp_chn_id", DeleteRule="NO ACTION")]
		public EntitySet<Wtp_WaysToPrevent> Wtp_WaysToPrevent
		{
			get
			{
				return this._Wtp_WaysToPrevent;
			}
			set
			{
				this._Wtp_WaysToPrevent.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bhv_Behavior(Bhv_Behavior entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Bhv_Behavior(Bhv_Behavior entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Emt_Emotions(Emt_Emotions entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Emt_Emotions(Emt_Emotions entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Gft_GoalsForTomorrow(Gft_GoalsForTomorrow entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Gft_GoalsForTomorrow(Gft_GoalsForTomorrow entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Imc_ImmediateConsequences(Imc_ImmediateConsequences entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Imc_ImmediateConsequences(Imc_ImmediateConsequences entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Ltc_LongTermConsequences(Ltc_LongTermConsequences entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Ltc_LongTermConsequences(Ltc_LongTermConsequences entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Ltg_LongTermGoal(Ltg_LongTermGoal entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Ltg_LongTermGoal(Ltg_LongTermGoal entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Stg_ShortTermGoals(Stg_ShortTermGoals entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Stg_ShortTermGoals(Stg_ShortTermGoals entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Tht_Thought(Tht_Thought entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Tht_Thought(Tht_Thought entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Vul_Vulnerability(Vul_Vulnerability entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Vul_Vulnerability(Vul_Vulnerability entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
		
		private void attach_Wtp_WaysToPrevent(Wtp_WaysToPrevent entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = this;
		}
		
		private void detach_Wtp_WaysToPrevent(Wtp_WaysToPrevent entity)
		{
			this.SendPropertyChanging();
			entity.Chn_ChainAnalysis = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.emt_Emotions")]
	public partial class Emt_Emotions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Emt_order;
		
		private int _Emt_pre_id;
		
		private int _Emt_chn_id;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
		private EntityRef<Pre_PredefinedEmotion> _Pre_PredefinedEmotion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmt_orderChanging(int value);
    partial void OnEmt_orderChanged();
    partial void OnEmt_pre_idChanging(int value);
    partial void OnEmt_pre_idChanged();
    partial void OnEmt_chn_idChanging(int value);
    partial void OnEmt_chn_idChanged();
    #endregion
		
		public Emt_Emotions()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			this._Pre_PredefinedEmotion = default(EntityRef<Pre_PredefinedEmotion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="emt_order", Storage="_Emt_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Emt_order
		{
			get
			{
				return this._Emt_order;
			}
			set
			{
				if ((this._Emt_order != value))
				{
					this.OnEmt_orderChanging(value);
					this.SendPropertyChanging();
					this._Emt_order = value;
					this.SendPropertyChanged("Emt_order");
					this.OnEmt_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="emt_pre_id", Storage="_Emt_pre_id", DbType="Int NOT NULL")]
		public int Emt_pre_id
		{
			get
			{
				return this._Emt_pre_id;
			}
			set
			{
				if ((this._Emt_pre_id != value))
				{
					this.OnEmt_pre_idChanging(value);
					this.SendPropertyChanging();
					this._Emt_pre_id = value;
					this.SendPropertyChanged("Emt_pre_id");
					this.OnEmt_pre_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="emt_chn_id", Storage="_Emt_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Emt_chn_id
		{
			get
			{
				return this._Emt_chn_id;
			}
			set
			{
				if ((this._Emt_chn_id != value))
				{
					this.OnEmt_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Emt_chn_id = value;
					this.SendPropertyChanged("Emt_chn_id");
					this.OnEmt_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_emt_Emotions_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Emt_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Emt_Emotions.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Emt_Emotions.Add(this);
						this._Emt_chn_id = value.Chn_ID;
					}
					else
					{
						this._Emt_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_emt_Emotions_pre_PredefinedEmotion", Storage="_Pre_PredefinedEmotion", ThisKey="Emt_pre_id", OtherKey="Pre_ID", IsForeignKey=true)]
		public Pre_PredefinedEmotion Pre_PredefinedEmotion
		{
			get
			{
				return this._Pre_PredefinedEmotion.Entity;
			}
			set
			{
				Pre_PredefinedEmotion previousValue = this._Pre_PredefinedEmotion.Entity;
				if (((previousValue != value) 
							|| (this._Pre_PredefinedEmotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pre_PredefinedEmotion.Entity = null;
						previousValue.Emt_Emotions.Remove(this);
					}
					this._Pre_PredefinedEmotion.Entity = value;
					if ((value != null))
					{
						value.Emt_Emotions.Add(this);
						this._Emt_pre_id = value.Pre_ID;
					}
					else
					{
						this._Emt_pre_id = default(int);
					}
					this.SendPropertyChanged("Pre_PredefinedEmotion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gft_GoalsForTomorrow")]
	public partial class Gft_GoalsForTomorrow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Gft_order;
		
		private int _Gft_chn_id;
		
		private string _Gft_Goal;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGft_orderChanging(int value);
    partial void OnGft_orderChanged();
    partial void OnGft_chn_idChanging(int value);
    partial void OnGft_chn_idChanged();
    partial void OnGft_GoalChanging(string value);
    partial void OnGft_GoalChanged();
    #endregion
		
		public Gft_GoalsForTomorrow()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gft_order", Storage="_Gft_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Gft_order
		{
			get
			{
				return this._Gft_order;
			}
			set
			{
				if ((this._Gft_order != value))
				{
					this.OnGft_orderChanging(value);
					this.SendPropertyChanging();
					this._Gft_order = value;
					this.SendPropertyChanged("Gft_order");
					this.OnGft_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gft_chn_id", Storage="_Gft_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Gft_chn_id
		{
			get
			{
				return this._Gft_chn_id;
			}
			set
			{
				if ((this._Gft_chn_id != value))
				{
					this.OnGft_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Gft_chn_id = value;
					this.SendPropertyChanged("Gft_chn_id");
					this.OnGft_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gft_Goal", Storage="_Gft_Goal", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Gft_Goal
		{
			get
			{
				return this._Gft_Goal;
			}
			set
			{
				if ((this._Gft_Goal != value))
				{
					this.OnGft_GoalChanging(value);
					this.SendPropertyChanging();
					this._Gft_Goal = value;
					this.SendPropertyChanged("Gft_Goal");
					this.OnGft_GoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_gft_GoalsForTomorrow_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Gft_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Gft_GoalsForTomorrow.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Gft_GoalsForTomorrow.Add(this);
						this._Gft_chn_id = value.Chn_ID;
					}
					else
					{
						this._Gft_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gsr_GlobalSuggestions")]
	public partial class Gsr_GlobalSuggestions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Gsr_id;
		
		private string _Gsr_RewardName;
		
		private int _Gsr_CheckMarksNeeded;
		
		private EntitySet<Rwd_Rewards> _Rwd_Rewards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGsr_idChanging(int value);
    partial void OnGsr_idChanged();
    partial void OnGsr_RewardNameChanging(string value);
    partial void OnGsr_RewardNameChanged();
    partial void OnGsr_CheckMarksNeededChanging(int value);
    partial void OnGsr_CheckMarksNeededChanged();
    #endregion
		
		public Gsr_GlobalSuggestions()
		{
			this._Rwd_Rewards = new EntitySet<Rwd_Rewards>(new Action<Rwd_Rewards>(this.attach_Rwd_Rewards), new Action<Rwd_Rewards>(this.detach_Rwd_Rewards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gsr_id", Storage="_Gsr_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Gsr_id
		{
			get
			{
				return this._Gsr_id;
			}
			set
			{
				if ((this._Gsr_id != value))
				{
					this.OnGsr_idChanging(value);
					this.SendPropertyChanging();
					this._Gsr_id = value;
					this.SendPropertyChanged("Gsr_id");
					this.OnGsr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gsr_RewardName", Storage="_Gsr_RewardName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Gsr_RewardName
		{
			get
			{
				return this._Gsr_RewardName;
			}
			set
			{
				if ((this._Gsr_RewardName != value))
				{
					this.OnGsr_RewardNameChanging(value);
					this.SendPropertyChanging();
					this._Gsr_RewardName = value;
					this.SendPropertyChanged("Gsr_RewardName");
					this.OnGsr_RewardNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gsr_CheckMarksNeeded", Storage="_Gsr_CheckMarksNeeded", DbType="Int NOT NULL")]
		public int Gsr_CheckMarksNeeded
		{
			get
			{
				return this._Gsr_CheckMarksNeeded;
			}
			set
			{
				if ((this._Gsr_CheckMarksNeeded != value))
				{
					this.OnGsr_CheckMarksNeededChanging(value);
					this.SendPropertyChanging();
					this._Gsr_CheckMarksNeeded = value;
					this.SendPropertyChanged("Gsr_CheckMarksNeeded");
					this.OnGsr_CheckMarksNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_rwd_Rewards_usr_User", Storage="_Rwd_Rewards", ThisKey="Gsr_id", OtherKey="Rwd_gsr_id", DeleteRule="NO ACTION")]
		public EntitySet<Rwd_Rewards> Rwd_Rewards
		{
			get
			{
				return this._Rwd_Rewards;
			}
			set
			{
				this._Rwd_Rewards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rwd_Rewards(Rwd_Rewards entity)
		{
			this.SendPropertyChanging();
			entity.Gsr_GlobalSuggestions = this;
		}
		
		private void detach_Rwd_Rewards(Rwd_Rewards entity)
		{
			this.SendPropertyChanging();
			entity.Gsr_GlobalSuggestions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.imc_ImmediateConsequences")]
	public partial class Imc_ImmediateConsequences : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Imc_order;
		
		private int _Imc_chn_id;
		
		private string _Imc_Consequence;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImc_orderChanging(int value);
    partial void OnImc_orderChanged();
    partial void OnImc_chn_idChanging(int value);
    partial void OnImc_chn_idChanged();
    partial void OnImc_ConsequenceChanging(string value);
    partial void OnImc_ConsequenceChanged();
    #endregion
		
		public Imc_ImmediateConsequences()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="imc_order", Storage="_Imc_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Imc_order
		{
			get
			{
				return this._Imc_order;
			}
			set
			{
				if ((this._Imc_order != value))
				{
					this.OnImc_orderChanging(value);
					this.SendPropertyChanging();
					this._Imc_order = value;
					this.SendPropertyChanged("Imc_order");
					this.OnImc_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="imc_chn_id", Storage="_Imc_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Imc_chn_id
		{
			get
			{
				return this._Imc_chn_id;
			}
			set
			{
				if ((this._Imc_chn_id != value))
				{
					this.OnImc_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Imc_chn_id = value;
					this.SendPropertyChanged("Imc_chn_id");
					this.OnImc_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="imc_Consequence", Storage="_Imc_Consequence", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Imc_Consequence
		{
			get
			{
				return this._Imc_Consequence;
			}
			set
			{
				if ((this._Imc_Consequence != value))
				{
					this.OnImc_ConsequenceChanging(value);
					this.SendPropertyChanging();
					this._Imc_Consequence = value;
					this.SendPropertyChanged("Imc_Consequence");
					this.OnImc_ConsequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_imc_ImmediateConsequences_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Imc_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Imc_ImmediateConsequences.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Imc_ImmediateConsequences.Add(this);
						this._Imc_chn_id = value.Chn_ID;
					}
					else
					{
						this._Imc_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ltc_LongTermConsequences")]
	public partial class Ltc_LongTermConsequences : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ltc_order;
		
		private int _Ltc_chn_id;
		
		private string _Ltc_Consequence;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLtc_orderChanging(int value);
    partial void OnLtc_orderChanged();
    partial void OnLtc_chn_idChanging(int value);
    partial void OnLtc_chn_idChanged();
    partial void OnLtc_ConsequenceChanging(string value);
    partial void OnLtc_ConsequenceChanged();
    #endregion
		
		public Ltc_LongTermConsequences()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ltc_order", Storage="_Ltc_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ltc_order
		{
			get
			{
				return this._Ltc_order;
			}
			set
			{
				if ((this._Ltc_order != value))
				{
					this.OnLtc_orderChanging(value);
					this.SendPropertyChanging();
					this._Ltc_order = value;
					this.SendPropertyChanged("Ltc_order");
					this.OnLtc_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ltc_chn_id", Storage="_Ltc_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ltc_chn_id
		{
			get
			{
				return this._Ltc_chn_id;
			}
			set
			{
				if ((this._Ltc_chn_id != value))
				{
					this.OnLtc_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Ltc_chn_id = value;
					this.SendPropertyChanged("Ltc_chn_id");
					this.OnLtc_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ltc_Consequence", Storage="_Ltc_Consequence", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Ltc_Consequence
		{
			get
			{
				return this._Ltc_Consequence;
			}
			set
			{
				if ((this._Ltc_Consequence != value))
				{
					this.OnLtc_ConsequenceChanging(value);
					this.SendPropertyChanging();
					this._Ltc_Consequence = value;
					this.SendPropertyChanged("Ltc_Consequence");
					this.OnLtc_ConsequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ltc_LongTermConsequences_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Ltc_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Ltc_LongTermConsequences.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Ltc_LongTermConsequences.Add(this);
						this._Ltc_chn_id = value.Chn_ID;
					}
					else
					{
						this._Ltc_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ltg_LongTermGoal")]
	public partial class Ltg_LongTermGoal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ltg_order;
		
		private int _Ltg_chn_id;
		
		private string _Ltg_Goal;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLtg_orderChanging(int value);
    partial void OnLtg_orderChanged();
    partial void OnLtg_chn_idChanging(int value);
    partial void OnLtg_chn_idChanged();
    partial void OnLtg_GoalChanging(string value);
    partial void OnLtg_GoalChanged();
    #endregion
		
		public Ltg_LongTermGoal()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ltg_order", Storage="_Ltg_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ltg_order
		{
			get
			{
				return this._Ltg_order;
			}
			set
			{
				if ((this._Ltg_order != value))
				{
					this.OnLtg_orderChanging(value);
					this.SendPropertyChanging();
					this._Ltg_order = value;
					this.SendPropertyChanged("Ltg_order");
					this.OnLtg_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ltg_chn_id", Storage="_Ltg_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ltg_chn_id
		{
			get
			{
				return this._Ltg_chn_id;
			}
			set
			{
				if ((this._Ltg_chn_id != value))
				{
					this.OnLtg_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Ltg_chn_id = value;
					this.SendPropertyChanged("Ltg_chn_id");
					this.OnLtg_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ltg_Goal", Storage="_Ltg_Goal", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Ltg_Goal
		{
			get
			{
				return this._Ltg_Goal;
			}
			set
			{
				if ((this._Ltg_Goal != value))
				{
					this.OnLtg_GoalChanging(value);
					this.SendPropertyChanging();
					this._Ltg_Goal = value;
					this.SendPropertyChanged("Ltg_Goal");
					this.OnLtg_GoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ltg_LongTermGoal_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Ltg_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Ltg_LongTermGoal.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Ltg_LongTermGoal.Add(this);
						this._Ltg_chn_id = value.Chn_ID;
					}
					else
					{
						this._Ltg_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pre_PredefinedEmotion")]
	public partial class Pre_PredefinedEmotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pre_ID;
		
		private string _Pre_Emotion;
		
		private EntitySet<Emt_Emotions> _Emt_Emotions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPre_IDChanging(int value);
    partial void OnPre_IDChanged();
    partial void OnPre_EmotionChanging(string value);
    partial void OnPre_EmotionChanged();
    #endregion
		
		public Pre_PredefinedEmotion()
		{
			this._Emt_Emotions = new EntitySet<Emt_Emotions>(new Action<Emt_Emotions>(this.attach_Emt_Emotions), new Action<Emt_Emotions>(this.detach_Emt_Emotions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pre_ID", Storage="_Pre_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Pre_ID
		{
			get
			{
				return this._Pre_ID;
			}
			set
			{
				if ((this._Pre_ID != value))
				{
					this.OnPre_IDChanging(value);
					this.SendPropertyChanging();
					this._Pre_ID = value;
					this.SendPropertyChanged("Pre_ID");
					this.OnPre_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pre_Emotion", Storage="_Pre_Emotion", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Pre_Emotion
		{
			get
			{
				return this._Pre_Emotion;
			}
			set
			{
				if ((this._Pre_Emotion != value))
				{
					this.OnPre_EmotionChanging(value);
					this.SendPropertyChanging();
					this._Pre_Emotion = value;
					this.SendPropertyChanged("Pre_Emotion");
					this.OnPre_EmotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_emt_Emotions_pre_PredefinedEmotion", Storage="_Emt_Emotions", ThisKey="Pre_ID", OtherKey="Emt_pre_id", DeleteRule="NO ACTION")]
		public EntitySet<Emt_Emotions> Emt_Emotions
		{
			get
			{
				return this._Emt_Emotions;
			}
			set
			{
				this._Emt_Emotions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Emt_Emotions(Emt_Emotions entity)
		{
			this.SendPropertyChanging();
			entity.Pre_PredefinedEmotion = this;
		}
		
		private void detach_Emt_Emotions(Emt_Emotions entity)
		{
			this.SendPropertyChanging();
			entity.Pre_PredefinedEmotion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rwd_Rewards")]
	public partial class Rwd_Rewards : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Rwd_usr_ID;
		
		private string _Rwd_RewardName;
		
		private System.Nullable<int> _Rwd_gsr_id;
		
		private System.Nullable<int> _Rwd_NumCheckMarksRequired;
		
		private int _Rwd_ID;
		
		private EntityRef<Rwd_Rewards> _Rwd_;
		
		private EntityRef<Rwd_Rewards> _Rwd_Rewards_rwd_Rewards;
		
		private EntityRef<Gsr_GlobalSuggestions> _Gsr_GlobalSuggestions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRwd_usr_IDChanging(int value);
    partial void OnRwd_usr_IDChanged();
    partial void OnRwd_RewardNameChanging(string value);
    partial void OnRwd_RewardNameChanged();
    partial void OnRwd_gsr_idChanging(System.Nullable<int> value);
    partial void OnRwd_gsr_idChanged();
    partial void OnRwd_NumCheckMarksRequiredChanging(System.Nullable<int> value);
    partial void OnRwd_NumCheckMarksRequiredChanged();
    partial void OnRwd_IDChanging(int value);
    partial void OnRwd_IDChanged();
    #endregion
		
		public Rwd_Rewards()
		{
			this._Rwd_ = default(EntityRef<Rwd_Rewards>);
			this._Rwd_Rewards_rwd_Rewards = default(EntityRef<Rwd_Rewards>);
			this._Gsr_GlobalSuggestions = default(EntityRef<Gsr_GlobalSuggestions>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rwd_usr_ID", Storage="_Rwd_usr_ID", DbType="Int NOT NULL")]
		public int Rwd_usr_ID
		{
			get
			{
				return this._Rwd_usr_ID;
			}
			set
			{
				if ((this._Rwd_usr_ID != value))
				{
					this.OnRwd_usr_IDChanging(value);
					this.SendPropertyChanging();
					this._Rwd_usr_ID = value;
					this.SendPropertyChanged("Rwd_usr_ID");
					this.OnRwd_usr_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rwd_RewardName", Storage="_Rwd_RewardName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Rwd_RewardName
		{
			get
			{
				return this._Rwd_RewardName;
			}
			set
			{
				if ((this._Rwd_RewardName != value))
				{
					this.OnRwd_RewardNameChanging(value);
					this.SendPropertyChanging();
					this._Rwd_RewardName = value;
					this.SendPropertyChanged("Rwd_RewardName");
					this.OnRwd_RewardNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rwd_gsr_id", Storage="_Rwd_gsr_id", DbType="Int")]
		public System.Nullable<int> Rwd_gsr_id
		{
			get
			{
				return this._Rwd_gsr_id;
			}
			set
			{
				if ((this._Rwd_gsr_id != value))
				{
					this.OnRwd_gsr_idChanging(value);
					this.SendPropertyChanging();
					this._Rwd_gsr_id = value;
					this.SendPropertyChanged("Rwd_gsr_id");
					this.OnRwd_gsr_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rwd_NumCheckMarksRequired", Storage="_Rwd_NumCheckMarksRequired", DbType="Int")]
		public System.Nullable<int> Rwd_NumCheckMarksRequired
		{
			get
			{
				return this._Rwd_NumCheckMarksRequired;
			}
			set
			{
				if ((this._Rwd_NumCheckMarksRequired != value))
				{
					this.OnRwd_NumCheckMarksRequiredChanging(value);
					this.SendPropertyChanging();
					this._Rwd_NumCheckMarksRequired = value;
					this.SendPropertyChanged("Rwd_NumCheckMarksRequired");
					this.OnRwd_NumCheckMarksRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rwd_ID", Storage="_Rwd_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Rwd_ID
		{
			get
			{
				return this._Rwd_ID;
			}
			set
			{
				if ((this._Rwd_ID != value))
				{
					this.OnRwd_IDChanging(value);
					this.SendPropertyChanging();
					this._Rwd_ID = value;
					this.SendPropertyChanged("Rwd_ID");
					this.OnRwd_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_rwd_Rewards_rwd_Rewards", Storage="_Rwd_", ThisKey="Rwd_ID", OtherKey="Rwd_ID", IsForeignKey=true)]
		public Rwd_Rewards Rwd_
		{
			get
			{
				return this._Rwd_.Entity;
			}
			set
			{
				Rwd_Rewards previousValue = this._Rwd_.Entity;
				if (((previousValue != value) 
							|| (this._Rwd_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rwd_.Entity = null;
						previousValue.Rwd_Rewards_rwd_Rewards = null;
					}
					this._Rwd_.Entity = value;
					if ((value != null))
					{
						value.Rwd_Rewards_rwd_Rewards = this;
						this._Rwd_ID = value.Rwd_ID;
					}
					else
					{
						this._Rwd_ID = default(int);
					}
					this.SendPropertyChanged("Rwd_");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_rwd_Rewards_rwd_Rewards", Storage="_Rwd_Rewards_rwd_Rewards", ThisKey="Rwd_ID", OtherKey="Rwd_ID", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public Rwd_Rewards Rwd_Rewards_rwd_Rewards
		{
			get
			{
				return this._Rwd_Rewards_rwd_Rewards.Entity;
			}
			set
			{
				Rwd_Rewards previousValue = this._Rwd_Rewards_rwd_Rewards.Entity;
				if (((previousValue != value) 
							|| (this._Rwd_Rewards_rwd_Rewards.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rwd_Rewards_rwd_Rewards.Entity = null;
						previousValue.Rwd_ = null;
					}
					this._Rwd_Rewards_rwd_Rewards.Entity = value;
					if ((value != null))
					{
						value.Rwd_ = this;
					}
					this.SendPropertyChanged("Rwd_Rewards_rwd_Rewards");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_rwd_Rewards_usr_User", Storage="_Gsr_GlobalSuggestions", ThisKey="Rwd_gsr_id", OtherKey="Gsr_id", IsForeignKey=true)]
		public Gsr_GlobalSuggestions Gsr_GlobalSuggestions
		{
			get
			{
				return this._Gsr_GlobalSuggestions.Entity;
			}
			set
			{
				Gsr_GlobalSuggestions previousValue = this._Gsr_GlobalSuggestions.Entity;
				if (((previousValue != value) 
							|| (this._Gsr_GlobalSuggestions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gsr_GlobalSuggestions.Entity = null;
						previousValue.Rwd_Rewards.Remove(this);
					}
					this._Gsr_GlobalSuggestions.Entity = value;
					if ((value != null))
					{
						value.Rwd_Rewards.Add(this);
						this._Rwd_gsr_id = value.Gsr_id;
					}
					else
					{
						this._Rwd_gsr_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gsr_GlobalSuggestions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stg_ShortTermGoals")]
	public partial class Stg_ShortTermGoals : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Stg_order;
		
		private int _Stg_chn_id;
		
		private string _Stg_Goal;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStg_orderChanging(int value);
    partial void OnStg_orderChanged();
    partial void OnStg_chn_idChanging(int value);
    partial void OnStg_chn_idChanged();
    partial void OnStg_GoalChanging(string value);
    partial void OnStg_GoalChanged();
    #endregion
		
		public Stg_ShortTermGoals()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stg_order", Storage="_Stg_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Stg_order
		{
			get
			{
				return this._Stg_order;
			}
			set
			{
				if ((this._Stg_order != value))
				{
					this.OnStg_orderChanging(value);
					this.SendPropertyChanging();
					this._Stg_order = value;
					this.SendPropertyChanged("Stg_order");
					this.OnStg_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stg_chn_id", Storage="_Stg_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Stg_chn_id
		{
			get
			{
				return this._Stg_chn_id;
			}
			set
			{
				if ((this._Stg_chn_id != value))
				{
					this.OnStg_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Stg_chn_id = value;
					this.SendPropertyChanged("Stg_chn_id");
					this.OnStg_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stg_Goal", Storage="_Stg_Goal", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Stg_Goal
		{
			get
			{
				return this._Stg_Goal;
			}
			set
			{
				if ((this._Stg_Goal != value))
				{
					this.OnStg_GoalChanging(value);
					this.SendPropertyChanging();
					this._Stg_Goal = value;
					this.SendPropertyChanged("Stg_Goal");
					this.OnStg_GoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_stg_ShortTermGoals_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Stg_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Stg_ShortTermGoals.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Stg_ShortTermGoals.Add(this);
						this._Stg_chn_id = value.Chn_ID;
					}
					else
					{
						this._Stg_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tht_Thought")]
	public partial class Tht_Thought : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Tht_order;
		
		private int _Tht_chn_ID;
		
		private string _Tht_Thought1;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTht_orderChanging(int value);
    partial void OnTht_orderChanged();
    partial void OnTht_chn_IDChanging(int value);
    partial void OnTht_chn_IDChanged();
    partial void OnTht_Thought1Changing(string value);
    partial void OnTht_Thought1Changed();
    #endregion
		
		public Tht_Thought()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tht_order", Storage="_Tht_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Tht_order
		{
			get
			{
				return this._Tht_order;
			}
			set
			{
				if ((this._Tht_order != value))
				{
					this.OnTht_orderChanging(value);
					this.SendPropertyChanging();
					this._Tht_order = value;
					this.SendPropertyChanged("Tht_order");
					this.OnTht_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tht_chn_ID", Storage="_Tht_chn_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Tht_chn_ID
		{
			get
			{
				return this._Tht_chn_ID;
			}
			set
			{
				if ((this._Tht_chn_ID != value))
				{
					this.OnTht_chn_IDChanging(value);
					this.SendPropertyChanging();
					this._Tht_chn_ID = value;
					this.SendPropertyChanged("Tht_chn_ID");
					this.OnTht_chn_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tht_Thought", Storage="_Tht_Thought1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Tht_Thought1
		{
			get
			{
				return this._Tht_Thought1;
			}
			set
			{
				if ((this._Tht_Thought1 != value))
				{
					this.OnTht_Thought1Changing(value);
					this.SendPropertyChanging();
					this._Tht_Thought1 = value;
					this.SendPropertyChanged("Tht_Thought1");
					this.OnTht_Thought1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_tht_Thought_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Tht_chn_ID", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Tht_Thought.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Tht_Thought.Add(this);
						this._Tht_chn_ID = value.Chn_ID;
					}
					else
					{
						this._Tht_chn_ID = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usr_User")]
	public partial class Usr_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Usr_ID;
		
		private string _Usr_FirstName;
		
		private string _Usr_LastName;
		
		private int _Usr_CurrentChecks;
		
		private EntitySet<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsr_IDChanging(int value);
    partial void OnUsr_IDChanged();
    partial void OnUsr_FirstNameChanging(string value);
    partial void OnUsr_FirstNameChanged();
    partial void OnUsr_LastNameChanging(string value);
    partial void OnUsr_LastNameChanged();
    partial void OnUsr_CurrentChecksChanging(int value);
    partial void OnUsr_CurrentChecksChanged();
    #endregion
		
		public Usr_User()
		{
			this._Chn_ChainAnalysis = new EntitySet<Chn_ChainAnalysis>(new Action<Chn_ChainAnalysis>(this.attach_Chn_ChainAnalysis), new Action<Chn_ChainAnalysis>(this.detach_Chn_ChainAnalysis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usr_ID", Storage="_Usr_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Usr_ID
		{
			get
			{
				return this._Usr_ID;
			}
			set
			{
				if ((this._Usr_ID != value))
				{
					this.OnUsr_IDChanging(value);
					this.SendPropertyChanging();
					this._Usr_ID = value;
					this.SendPropertyChanged("Usr_ID");
					this.OnUsr_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usr_FirstName", Storage="_Usr_FirstName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Usr_FirstName
		{
			get
			{
				return this._Usr_FirstName;
			}
			set
			{
				if ((this._Usr_FirstName != value))
				{
					this.OnUsr_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._Usr_FirstName = value;
					this.SendPropertyChanged("Usr_FirstName");
					this.OnUsr_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usr_LastName", Storage="_Usr_LastName", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Usr_LastName
		{
			get
			{
				return this._Usr_LastName;
			}
			set
			{
				if ((this._Usr_LastName != value))
				{
					this.OnUsr_LastNameChanging(value);
					this.SendPropertyChanging();
					this._Usr_LastName = value;
					this.SendPropertyChanged("Usr_LastName");
					this.OnUsr_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usr_CurrentChecks", Storage="_Usr_CurrentChecks", DbType="Int NOT NULL")]
		public int Usr_CurrentChecks
		{
			get
			{
				return this._Usr_CurrentChecks;
			}
			set
			{
				if ((this._Usr_CurrentChecks != value))
				{
					this.OnUsr_CurrentChecksChanging(value);
					this.SendPropertyChanging();
					this._Usr_CurrentChecks = value;
					this.SendPropertyChanged("Usr_CurrentChecks");
					this.OnUsr_CurrentChecksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_chn_ChainAnalysis_usr_User", Storage="_Chn_ChainAnalysis", ThisKey="Usr_ID", OtherKey="Chn_usr_ID", DeleteRule="NO ACTION")]
		public EntitySet<Chn_ChainAnalysis> Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis;
			}
			set
			{
				this._Chn_ChainAnalysis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chn_ChainAnalysis(Chn_ChainAnalysis entity)
		{
			this.SendPropertyChanging();
			entity.Usr_User = this;
		}
		
		private void detach_Chn_ChainAnalysis(Chn_ChainAnalysis entity)
		{
			this.SendPropertyChanging();
			entity.Usr_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vul_Vulnerability")]
	public partial class Vul_Vulnerability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Vul_order;
		
		private int _Vul_chn_id;
		
		private string _Vul_Vulnerability1;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVul_orderChanging(int value);
    partial void OnVul_orderChanged();
    partial void OnVul_chn_idChanging(int value);
    partial void OnVul_chn_idChanged();
    partial void OnVul_Vulnerability1Changing(string value);
    partial void OnVul_Vulnerability1Changed();
    #endregion
		
		public Vul_Vulnerability()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vul_order", Storage="_Vul_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Vul_order
		{
			get
			{
				return this._Vul_order;
			}
			set
			{
				if ((this._Vul_order != value))
				{
					this.OnVul_orderChanging(value);
					this.SendPropertyChanging();
					this._Vul_order = value;
					this.SendPropertyChanged("Vul_order");
					this.OnVul_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vul_chn_id", Storage="_Vul_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Vul_chn_id
		{
			get
			{
				return this._Vul_chn_id;
			}
			set
			{
				if ((this._Vul_chn_id != value))
				{
					this.OnVul_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Vul_chn_id = value;
					this.SendPropertyChanged("Vul_chn_id");
					this.OnVul_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vul_Vulnerability", Storage="_Vul_Vulnerability1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Vul_Vulnerability1
		{
			get
			{
				return this._Vul_Vulnerability1;
			}
			set
			{
				if ((this._Vul_Vulnerability1 != value))
				{
					this.OnVul_Vulnerability1Changing(value);
					this.SendPropertyChanging();
					this._Vul_Vulnerability1 = value;
					this.SendPropertyChanged("Vul_Vulnerability1");
					this.OnVul_Vulnerability1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_vul_Vulnerability_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Vul_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Vul_Vulnerability.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Vul_Vulnerability.Add(this);
						this._Vul_chn_id = value.Chn_ID;
					}
					else
					{
						this._Vul_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.wtp_WaysToPrevent")]
	public partial class Wtp_WaysToPrevent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Wtp_order;
		
		private int _Wtp_chn_id;
		
		private string _Wtp_WayToPrevent;
		
		private EntityRef<Chn_ChainAnalysis> _Chn_ChainAnalysis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWtp_orderChanging(int value);
    partial void OnWtp_orderChanged();
    partial void OnWtp_chn_idChanging(int value);
    partial void OnWtp_chn_idChanged();
    partial void OnWtp_WayToPreventChanging(string value);
    partial void OnWtp_WayToPreventChanged();
    #endregion
		
		public Wtp_WaysToPrevent()
		{
			this._Chn_ChainAnalysis = default(EntityRef<Chn_ChainAnalysis>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="wtp_order", Storage="_Wtp_order", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Wtp_order
		{
			get
			{
				return this._Wtp_order;
			}
			set
			{
				if ((this._Wtp_order != value))
				{
					this.OnWtp_orderChanging(value);
					this.SendPropertyChanging();
					this._Wtp_order = value;
					this.SendPropertyChanged("Wtp_order");
					this.OnWtp_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="wtp_chn_id", Storage="_Wtp_chn_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Wtp_chn_id
		{
			get
			{
				return this._Wtp_chn_id;
			}
			set
			{
				if ((this._Wtp_chn_id != value))
				{
					this.OnWtp_chn_idChanging(value);
					this.SendPropertyChanging();
					this._Wtp_chn_id = value;
					this.SendPropertyChanged("Wtp_chn_id");
					this.OnWtp_chn_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="wtp_WayToPrevent", Storage="_Wtp_WayToPrevent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Wtp_WayToPrevent
		{
			get
			{
				return this._Wtp_WayToPrevent;
			}
			set
			{
				if ((this._Wtp_WayToPrevent != value))
				{
					this.OnWtp_WayToPreventChanging(value);
					this.SendPropertyChanging();
					this._Wtp_WayToPrevent = value;
					this.SendPropertyChanged("Wtp_WayToPrevent");
					this.OnWtp_WayToPreventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_wtp_WaysToPrevent_chn_ChainAnalysis", Storage="_Chn_ChainAnalysis", ThisKey="Wtp_chn_id", OtherKey="Chn_ID", IsForeignKey=true)]
		public Chn_ChainAnalysis Chn_ChainAnalysis
		{
			get
			{
				return this._Chn_ChainAnalysis.Entity;
			}
			set
			{
				Chn_ChainAnalysis previousValue = this._Chn_ChainAnalysis.Entity;
				if (((previousValue != value) 
							|| (this._Chn_ChainAnalysis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chn_ChainAnalysis.Entity = null;
						previousValue.Wtp_WaysToPrevent.Remove(this);
					}
					this._Chn_ChainAnalysis.Entity = value;
					if ((value != null))
					{
						value.Wtp_WaysToPrevent.Add(this);
						this._Wtp_chn_id = value.Chn_ID;
					}
					else
					{
						this._Wtp_chn_id = default(int);
					}
					this.SendPropertyChanged("Chn_ChainAnalysis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
